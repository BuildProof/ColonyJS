/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  Signer,
  utils,
} from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IColonyEventsInterface extends utils.Interface {
  contractName: "IColonyEvents";
  functions: {};

  events: {
    "Annotation(address,bytes32,string)": EventFragment;
    "ArbitraryReputationUpdate(address,address,uint256,int256)": EventFragment;
    "ColonyBootstrapped(address,address[],int256[])": EventFragment;
    "ColonyFundsClaimed(address,address,uint256,uint256)": EventFragment;
    "ColonyFundsMovedBetweenFundingPots(address,uint256,uint256,uint256,address)": EventFragment;
    "ColonyInitialised(address,address,address)": EventFragment;
    "ColonyMetadata(address,string)": EventFragment;
    "ColonyRewardInverseSet(address,uint256)": EventFragment;
    "ColonyRoleSet(address,address,uint256,uint8,bool)": EventFragment;
    "ColonyUpgraded(address,uint256,uint256)": EventFragment;
    "DomainAdded(address,uint256)": EventFragment;
    "DomainDeprecated(address,uint256,bool)": EventFragment;
    "DomainMetadata(address,uint256,string)": EventFragment;
    "ExpenditureAdded(address,uint256)": EventFragment;
    "ExpenditureCancelled(address,uint256)": EventFragment;
    "ExpenditureClaimDelaySet(address,uint256,uint256,uint256)": EventFragment;
    "ExpenditureFinalized(address,uint256)": EventFragment;
    "ExpenditureGlobalClaimDelaySet(address,uint256)": EventFragment;
    "ExpenditureLocked(address,uint256)": EventFragment;
    "ExpenditureMetadataSet(address,uint256,string)": EventFragment;
    "ExpenditurePayoutModifierSet(address,uint256,uint256,int256)": EventFragment;
    "ExpenditurePayoutSet(address,uint256,uint256,address,uint256)": EventFragment;
    "ExpenditureRecipientSet(address,uint256,uint256,address)": EventFragment;
    "ExpenditureSkillSet(address,uint256,uint256,uint256)": EventFragment;
    "ExpenditureTransferred(address,uint256,address)": EventFragment;
    "FundingPotAdded(uint256)": EventFragment;
    "MetaTransactionExecuted(address,address,bytes)": EventFragment;
    "PaymentAdded(address,uint256)": EventFragment;
    "PaymentFinalized(address,uint256)": EventFragment;
    "PaymentPayoutSet(address,uint256,address,uint256)": EventFragment;
    "PaymentRecipientSet(address,uint256,address)": EventFragment;
    "PaymentSkillSet(address,uint256,uint256)": EventFragment;
    "PayoutClaimed(address,uint256,address,uint256)": EventFragment;
    "RecoveryModeEntered(address)": EventFragment;
    "RecoveryModeExitApproved(address)": EventFragment;
    "RecoveryModeExited(address)": EventFragment;
    "RecoveryRoleSet(address,bool)": EventFragment;
    "RecoveryStorageSlotSet(address,uint256,bytes32,bytes32)": EventFragment;
    "RewardPayoutClaimed(uint256,address,uint256,uint256)": EventFragment;
    "RewardPayoutCycleEnded(address,uint256)": EventFragment;
    "RewardPayoutCycleStarted(address,uint256)": EventFragment;
    "TaskAdded(address,uint256)": EventFragment;
    "TaskBriefSet(uint256,bytes32)": EventFragment;
    "TaskCanceled(uint256)": EventFragment;
    "TaskChangedViaSignatures(address[])": EventFragment;
    "TaskCompleted(address,uint256)": EventFragment;
    "TaskDeliverableSubmitted(address,uint256,bytes32)": EventFragment;
    "TaskDueDateSet(uint256,uint256)": EventFragment;
    "TaskFinalized(address,uint256)": EventFragment;
    "TaskPayoutSet(uint256,uint8,address,uint256)": EventFragment;
    "TaskRoleUserSet(uint256,uint8,address)": EventFragment;
    "TaskSkillSet(uint256,uint256)": EventFragment;
    "TaskWorkRatingRevealed(address,uint256,uint8,uint8)": EventFragment;
    "TokenUnlocked()": EventFragment;
    "TokensBurned(address,address,uint256)": EventFragment;
    "TokensMinted(address,address,uint256)": EventFragment;
    "TaskDomainSet(uint256,uint256)": EventFragment;
    "ColonyFundingRoleSet(address,bool)": EventFragment;
    "ColonyAdministrationRoleSet(address,bool)": EventFragment;
    "ColonyArchitectureRoleSet(address,bool)": EventFragment;
    "ColonyRootRoleSet(address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Annotation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ArbitraryReputationUpdate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyBootstrapped"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyFundsClaimed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyFundsMovedBetweenFundingPots"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyInitialised"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyMetadata"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyRewardInverseSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyUpgraded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainDeprecated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainMetadata"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureCancelled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureClaimDelaySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureFinalized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureGlobalClaimDelaySet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureLocked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureMetadataSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditurePayoutModifierSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditurePayoutSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureRecipientSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureSkillSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FundingPotAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MetaTransactionExecuted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentFinalized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentPayoutSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentRecipientSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentSkillSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PayoutClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeEntered"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeExitApproved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeExited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryStorageSlotSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RewardPayoutClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RewardPayoutCycleEnded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RewardPayoutCycleStarted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskBriefSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskCanceled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskChangedViaSignatures"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskCompleted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskDeliverableSubmitted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskDueDateSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskFinalized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskPayoutSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskRoleUserSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskSkillSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskWorkRatingRevealed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenUnlocked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensBurned"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensMinted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskDomainSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyFundingRoleSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyAdministrationRoleSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyArchitectureRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyRootRoleSet"): EventFragment;
}

export type AnnotationEvent = TypedEvent<
  [string, string, string],
  { agent: string; txHash: string; metadata: string }
>;

export type AnnotationEventFilter = TypedEventFilter<AnnotationEvent>;

export type ArbitraryReputationUpdateEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { agent: string; user: string; skillId: BigNumber; amount: BigNumber }
>;

export type ArbitraryReputationUpdateEventFilter =
  TypedEventFilter<ArbitraryReputationUpdateEvent>;

export type ColonyBootstrapped_address_address_array_int256_array_Event =
  TypedEvent<
    [string, string[], BigNumber[]],
    { agent: string; users: string[]; amounts: BigNumber[] }
  >;

export type ColonyBootstrapped_address_address_array_int256_array_EventFilter =
  TypedEventFilter<ColonyBootstrapped_address_address_array_int256_array_Event>;

export type ColonyBootstrapped_address_array_int256_array_Event = TypedEvent<
  [string[], BigNumber[]],
  { users: string[]; amounts: BigNumber[] }
>;

export type ColonyBootstrapped_address_array_int256_array_EventFilter =
  TypedEventFilter<ColonyBootstrapped_address_array_int256_array_Event>;

export type ColonyFundsClaimed_address_address_uint256_uint256_Event =
  TypedEvent<
    [string, string, BigNumber, BigNumber],
    { agent: string; token: string; fee: BigNumber; payoutRemainder: BigNumber }
  >;

export type ColonyFundsClaimed_address_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyFundsClaimed_address_address_uint256_uint256_Event>;

export type ColonyFundsClaimed_address_uint256_uint256_Event = TypedEvent<
  [string, BigNumber, BigNumber],
  { token: string; fee: BigNumber; payoutRemainder: BigNumber }
>;

export type ColonyFundsClaimed_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyFundsClaimed_address_uint256_uint256_Event>;

export type ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, BigNumber, string],
    {
      agent: string;
      fromPot: BigNumber;
      toPot: BigNumber;
      amount: BigNumber;
      token: string;
    }
  >;

export type ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventFilter =
  TypedEventFilter<ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_Event>;

export type ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_Event =
  TypedEvent<
    [BigNumber, BigNumber, BigNumber, string],
    { fromPot: BigNumber; toPot: BigNumber; amount: BigNumber; token: string }
  >;

export type ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventFilter =
  TypedEventFilter<ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_Event>;

export type ColonyInitialised_address_address_address_Event = TypedEvent<
  [string, string, string],
  { agent: string; colonyNetwork: string; token: string }
>;

export type ColonyInitialised_address_address_address_EventFilter =
  TypedEventFilter<ColonyInitialised_address_address_address_Event>;

export type ColonyInitialised_address_address_Event = TypedEvent<
  [string, string],
  { colonyNetwork: string; token: string }
>;

export type ColonyInitialised_address_address_EventFilter =
  TypedEventFilter<ColonyInitialised_address_address_Event>;

export type ColonyMetadataEvent = TypedEvent<
  [string, string],
  { agent: string; metadata: string }
>;

export type ColonyMetadataEventFilter = TypedEventFilter<ColonyMetadataEvent>;

export type ColonyRewardInverseSet_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; rewardInverse: BigNumber }
>;

export type ColonyRewardInverseSet_address_uint256_EventFilter =
  TypedEventFilter<ColonyRewardInverseSet_address_uint256_Event>;

export type ColonyRewardInverseSet_uint256_Event = TypedEvent<
  [BigNumber],
  { rewardInverse: BigNumber }
>;

export type ColonyRewardInverseSet_uint256_EventFilter =
  TypedEventFilter<ColonyRewardInverseSet_uint256_Event>;

export type ColonyRoleSet_address_address_uint256_uint8_bool_Event = TypedEvent<
  [string, string, BigNumber, number, boolean],
  {
    agent: string;
    user: string;
    domainId: BigNumber;
    role: number;
    setTo: boolean;
  }
>;

export type ColonyRoleSet_address_address_uint256_uint8_bool_EventFilter =
  TypedEventFilter<ColonyRoleSet_address_address_uint256_uint8_bool_Event>;

export type ColonyRoleSet_address_uint256_uint8_bool_Event = TypedEvent<
  [string, BigNumber, number, boolean],
  { user: string; domainId: BigNumber; role: number; setTo: boolean }
>;

export type ColonyRoleSet_address_uint256_uint8_bool_EventFilter =
  TypedEventFilter<ColonyRoleSet_address_uint256_uint8_bool_Event>;

export type ColonyUpgraded_address_uint256_uint256_Event = TypedEvent<
  [string, BigNumber, BigNumber],
  { agent: string; oldVersion: BigNumber; newVersion: BigNumber }
>;

export type ColonyUpgraded_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyUpgraded_address_uint256_uint256_Event>;

export type ColonyUpgraded_uint256_uint256_Event = TypedEvent<
  [BigNumber, BigNumber],
  { oldVersion: BigNumber; newVersion: BigNumber }
>;

export type ColonyUpgraded_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyUpgraded_uint256_uint256_Event>;

export type DomainAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; domainId: BigNumber }
>;

export type DomainAdded_address_uint256_EventFilter =
  TypedEventFilter<DomainAdded_address_uint256_Event>;

export type DomainAdded_uint256_Event = TypedEvent<
  [BigNumber],
  { domainId: BigNumber }
>;

export type DomainAdded_uint256_EventFilter =
  TypedEventFilter<DomainAdded_uint256_Event>;

export type DomainDeprecatedEvent = TypedEvent<
  [string, BigNumber, boolean],
  { agent: string; domainId: BigNumber; deprecated: boolean }
>;

export type DomainDeprecatedEventFilter =
  TypedEventFilter<DomainDeprecatedEvent>;

export type DomainMetadataEvent = TypedEvent<
  [string, BigNumber, string],
  { agent: string; domainId: BigNumber; metadata: string }
>;

export type DomainMetadataEventFilter = TypedEventFilter<DomainMetadataEvent>;

export type ExpenditureAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; expenditureId: BigNumber }
>;

export type ExpenditureAdded_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureAdded_address_uint256_Event>;

export type ExpenditureAdded_uint256_Event = TypedEvent<
  [BigNumber],
  { expenditureId: BigNumber }
>;

export type ExpenditureAdded_uint256_EventFilter =
  TypedEventFilter<ExpenditureAdded_uint256_Event>;

export type ExpenditureCancelled_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; expenditureId: BigNumber }
>;

export type ExpenditureCancelled_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureCancelled_address_uint256_Event>;

export type ExpenditureCancelled_uint256_Event = TypedEvent<
  [BigNumber],
  { expenditureId: BigNumber }
>;

export type ExpenditureCancelled_uint256_EventFilter =
  TypedEventFilter<ExpenditureCancelled_uint256_Event>;

export type ExpenditureClaimDelaySetEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  {
    agent: string;
    expenditureId: BigNumber;
    slot: BigNumber;
    claimDelay: BigNumber;
  }
>;

export type ExpenditureClaimDelaySetEventFilter =
  TypedEventFilter<ExpenditureClaimDelaySetEvent>;

export type ExpenditureFinalized_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; expenditureId: BigNumber }
>;

export type ExpenditureFinalized_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureFinalized_address_uint256_Event>;

export type ExpenditureFinalized_uint256_Event = TypedEvent<
  [BigNumber],
  { expenditureId: BigNumber }
>;

export type ExpenditureFinalized_uint256_EventFilter =
  TypedEventFilter<ExpenditureFinalized_uint256_Event>;

export type ExpenditureGlobalClaimDelaySetEvent = TypedEvent<
  [string, BigNumber],
  { agent: string; globalClaimDelay: BigNumber }
>;

export type ExpenditureGlobalClaimDelaySetEventFilter =
  TypedEventFilter<ExpenditureGlobalClaimDelaySetEvent>;

export type ExpenditureLockedEvent = TypedEvent<
  [string, BigNumber],
  { agent: string; expenditureId: BigNumber }
>;

export type ExpenditureLockedEventFilter =
  TypedEventFilter<ExpenditureLockedEvent>;

export type ExpenditureMetadataSetEvent = TypedEvent<
  [string, BigNumber, string],
  { agent: string; expenditureId: BigNumber; metadata: string }
>;

export type ExpenditureMetadataSetEventFilter =
  TypedEventFilter<ExpenditureMetadataSetEvent>;

export type ExpenditurePayoutModifierSetEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  {
    agent: string;
    expenditureId: BigNumber;
    slot: BigNumber;
    payoutModifier: BigNumber;
  }
>;

export type ExpenditurePayoutModifierSetEventFilter =
  TypedEventFilter<ExpenditurePayoutModifierSetEvent>;

export type ExpenditurePayoutSet_address_uint256_uint256_address_uint256_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, string, BigNumber],
    {
      agent: string;
      expenditureId: BigNumber;
      slot: BigNumber;
      token: string;
      amount: BigNumber;
    }
  >;

export type ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventFilter =
  TypedEventFilter<ExpenditurePayoutSet_address_uint256_uint256_address_uint256_Event>;

export type ExpenditurePayoutSet_uint256_uint256_address_uint256_Event =
  TypedEvent<
    [BigNumber, BigNumber, string, BigNumber],
    {
      expenditureId: BigNumber;
      slot: BigNumber;
      token: string;
      amount: BigNumber;
    }
  >;

export type ExpenditurePayoutSet_uint256_uint256_address_uint256_EventFilter =
  TypedEventFilter<ExpenditurePayoutSet_uint256_uint256_address_uint256_Event>;

export type ExpenditureRecipientSet_address_uint256_uint256_address_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, string],
    {
      agent: string;
      expenditureId: BigNumber;
      slot: BigNumber;
      recipient: string;
    }
  >;

export type ExpenditureRecipientSet_address_uint256_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureRecipientSet_address_uint256_uint256_address_Event>;

export type ExpenditureRecipientSet_uint256_uint256_address_Event = TypedEvent<
  [BigNumber, BigNumber, string],
  { expenditureId: BigNumber; slot: BigNumber; recipient: string }
>;

export type ExpenditureRecipientSet_uint256_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureRecipientSet_uint256_uint256_address_Event>;

export type ExpenditureSkillSet_address_uint256_uint256_uint256_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, BigNumber],
    {
      agent: string;
      expenditureId: BigNumber;
      slot: BigNumber;
      skillId: BigNumber;
    }
  >;

export type ExpenditureSkillSet_address_uint256_uint256_uint256_EventFilter =
  TypedEventFilter<ExpenditureSkillSet_address_uint256_uint256_uint256_Event>;

export type ExpenditureSkillSet_uint256_uint256_uint256_Event = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  { expenditureId: BigNumber; slot: BigNumber; skillId: BigNumber }
>;

export type ExpenditureSkillSet_uint256_uint256_uint256_EventFilter =
  TypedEventFilter<ExpenditureSkillSet_uint256_uint256_uint256_Event>;

export type ExpenditureTransferred_address_uint256_address_Event = TypedEvent<
  [string, BigNumber, string],
  { agent: string; expenditureId: BigNumber; owner: string }
>;

export type ExpenditureTransferred_address_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureTransferred_address_uint256_address_Event>;

export type ExpenditureTransferred_uint256_address_Event = TypedEvent<
  [BigNumber, string],
  { expenditureId: BigNumber; owner: string }
>;

export type ExpenditureTransferred_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureTransferred_uint256_address_Event>;

export type FundingPotAddedEvent = TypedEvent<
  [BigNumber],
  { fundingPotId: BigNumber }
>;

export type FundingPotAddedEventFilter = TypedEventFilter<FundingPotAddedEvent>;

export type MetaTransactionExecutedEvent = TypedEvent<
  [string, string, string],
  { userAddress: string; relayerAddress: string; payload: string }
>;

export type MetaTransactionExecutedEventFilter =
  TypedEventFilter<MetaTransactionExecutedEvent>;

export type PaymentAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; paymentId: BigNumber }
>;

export type PaymentAdded_address_uint256_EventFilter =
  TypedEventFilter<PaymentAdded_address_uint256_Event>;

export type PaymentAdded_uint256_Event = TypedEvent<
  [BigNumber],
  { paymentId: BigNumber }
>;

export type PaymentAdded_uint256_EventFilter =
  TypedEventFilter<PaymentAdded_uint256_Event>;

export type PaymentFinalizedEvent = TypedEvent<
  [string, BigNumber],
  { agent: string; paymentId: BigNumber }
>;

export type PaymentFinalizedEventFilter =
  TypedEventFilter<PaymentFinalizedEvent>;

export type PaymentPayoutSetEvent = TypedEvent<
  [string, BigNumber, string, BigNumber],
  { agent: string; paymentId: BigNumber; token: string; amount: BigNumber }
>;

export type PaymentPayoutSetEventFilter =
  TypedEventFilter<PaymentPayoutSetEvent>;

export type PaymentRecipientSetEvent = TypedEvent<
  [string, BigNumber, string],
  { agent: string; paymentId: BigNumber; recipient: string }
>;

export type PaymentRecipientSetEventFilter =
  TypedEventFilter<PaymentRecipientSetEvent>;

export type PaymentSkillSetEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { agent: string; paymentId: BigNumber; skillId: BigNumber }
>;

export type PaymentSkillSetEventFilter = TypedEventFilter<PaymentSkillSetEvent>;

export type PayoutClaimed_address_uint256_address_uint256_Event = TypedEvent<
  [string, BigNumber, string, BigNumber],
  { agent: string; fundingPotId: BigNumber; token: string; amount: BigNumber }
>;

export type PayoutClaimed_address_uint256_address_uint256_EventFilter =
  TypedEventFilter<PayoutClaimed_address_uint256_address_uint256_Event>;

export type PayoutClaimed_uint256_address_uint256_Event = TypedEvent<
  [BigNumber, string, BigNumber],
  { fundingPotId: BigNumber; token: string; amount: BigNumber }
>;

export type PayoutClaimed_uint256_address_uint256_EventFilter =
  TypedEventFilter<PayoutClaimed_uint256_address_uint256_Event>;

export type RecoveryModeEnteredEvent = TypedEvent<[string], { user: string }>;

export type RecoveryModeEnteredEventFilter =
  TypedEventFilter<RecoveryModeEnteredEvent>;

export type RecoveryModeExitApprovedEvent = TypedEvent<
  [string],
  { user: string }
>;

export type RecoveryModeExitApprovedEventFilter =
  TypedEventFilter<RecoveryModeExitApprovedEvent>;

export type RecoveryModeExitedEvent = TypedEvent<[string], { user: string }>;

export type RecoveryModeExitedEventFilter =
  TypedEventFilter<RecoveryModeExitedEvent>;

export type RecoveryRoleSetEvent = TypedEvent<
  [string, boolean],
  { user: string; setTo: boolean }
>;

export type RecoveryRoleSetEventFilter = TypedEventFilter<RecoveryRoleSetEvent>;

export type RecoveryStorageSlotSetEvent = TypedEvent<
  [string, BigNumber, string, string],
  { user: string; slot: BigNumber; fromValue: string; toValue: string }
>;

export type RecoveryStorageSlotSetEventFilter =
  TypedEventFilter<RecoveryStorageSlotSetEvent>;

export type RewardPayoutClaimedEvent = TypedEvent<
  [BigNumber, string, BigNumber, BigNumber],
  {
    rewardPayoutId: BigNumber;
    user: string;
    fee: BigNumber;
    rewardRemainder: BigNumber;
  }
>;

export type RewardPayoutClaimedEventFilter =
  TypedEventFilter<RewardPayoutClaimedEvent>;

export type RewardPayoutCycleEnded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; rewardPayoutId: BigNumber }
>;

export type RewardPayoutCycleEnded_address_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleEnded_address_uint256_Event>;

export type RewardPayoutCycleEnded_uint256_Event = TypedEvent<
  [BigNumber],
  { rewardPayoutId: BigNumber }
>;

export type RewardPayoutCycleEnded_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleEnded_uint256_Event>;

export type RewardPayoutCycleStarted_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; rewardPayoutId: BigNumber }
>;

export type RewardPayoutCycleStarted_address_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleStarted_address_uint256_Event>;

export type RewardPayoutCycleStarted_uint256_Event = TypedEvent<
  [BigNumber],
  { rewardPayoutId: BigNumber }
>;

export type RewardPayoutCycleStarted_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleStarted_uint256_Event>;

export type TaskAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; taskId: BigNumber }
>;

export type TaskAdded_address_uint256_EventFilter =
  TypedEventFilter<TaskAdded_address_uint256_Event>;

export type TaskAdded_uint256_Event = TypedEvent<
  [BigNumber],
  { taskId: BigNumber }
>;

export type TaskAdded_uint256_EventFilter =
  TypedEventFilter<TaskAdded_uint256_Event>;

export type TaskBriefSetEvent = TypedEvent<
  [BigNumber, string],
  { taskId: BigNumber; specificationHash: string }
>;

export type TaskBriefSetEventFilter = TypedEventFilter<TaskBriefSetEvent>;

export type TaskCanceledEvent = TypedEvent<[BigNumber], { taskId: BigNumber }>;

export type TaskCanceledEventFilter = TypedEventFilter<TaskCanceledEvent>;

export type TaskChangedViaSignaturesEvent = TypedEvent<
  [string[]],
  { reviewerAddresses: string[] }
>;

export type TaskChangedViaSignaturesEventFilter =
  TypedEventFilter<TaskChangedViaSignaturesEvent>;

export type TaskCompleted_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; taskId: BigNumber }
>;

export type TaskCompleted_address_uint256_EventFilter =
  TypedEventFilter<TaskCompleted_address_uint256_Event>;

export type TaskCompleted_uint256_Event = TypedEvent<
  [BigNumber],
  { taskId: BigNumber }
>;

export type TaskCompleted_uint256_EventFilter =
  TypedEventFilter<TaskCompleted_uint256_Event>;

export type TaskDeliverableSubmitted_address_uint256_bytes32_Event = TypedEvent<
  [string, BigNumber, string],
  { agent: string; taskId: BigNumber; deliverableHash: string }
>;

export type TaskDeliverableSubmitted_address_uint256_bytes32_EventFilter =
  TypedEventFilter<TaskDeliverableSubmitted_address_uint256_bytes32_Event>;

export type TaskDeliverableSubmitted_uint256_bytes32_Event = TypedEvent<
  [BigNumber, string],
  { taskId: BigNumber; deliverableHash: string }
>;

export type TaskDeliverableSubmitted_uint256_bytes32_EventFilter =
  TypedEventFilter<TaskDeliverableSubmitted_uint256_bytes32_Event>;

export type TaskDueDateSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  { taskId: BigNumber; dueDate: BigNumber }
>;

export type TaskDueDateSetEventFilter = TypedEventFilter<TaskDueDateSetEvent>;

export type TaskFinalized_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  { agent: string; taskId: BigNumber }
>;

export type TaskFinalized_address_uint256_EventFilter =
  TypedEventFilter<TaskFinalized_address_uint256_Event>;

export type TaskFinalized_uint256_Event = TypedEvent<
  [BigNumber],
  { taskId: BigNumber }
>;

export type TaskFinalized_uint256_EventFilter =
  TypedEventFilter<TaskFinalized_uint256_Event>;

export type TaskPayoutSetEvent = TypedEvent<
  [BigNumber, number, string, BigNumber],
  { taskId: BigNumber; role: number; token: string; amount: BigNumber }
>;

export type TaskPayoutSetEventFilter = TypedEventFilter<TaskPayoutSetEvent>;

export type TaskRoleUserSetEvent = TypedEvent<
  [BigNumber, number, string],
  { taskId: BigNumber; role: number; user: string }
>;

export type TaskRoleUserSetEventFilter = TypedEventFilter<TaskRoleUserSetEvent>;

export type TaskSkillSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  { taskId: BigNumber; skillId: BigNumber }
>;

export type TaskSkillSetEventFilter = TypedEventFilter<TaskSkillSetEvent>;

export type TaskWorkRatingRevealed_address_uint256_uint8_uint8_Event =
  TypedEvent<
    [string, BigNumber, number, number],
    { agent: string; taskId: BigNumber; role: number; rating: number }
  >;

export type TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventFilter =
  TypedEventFilter<TaskWorkRatingRevealed_address_uint256_uint8_uint8_Event>;

export type TaskWorkRatingRevealed_uint256_uint8_uint8_Event = TypedEvent<
  [BigNumber, number, number],
  { taskId: BigNumber; role: number; rating: number }
>;

export type TaskWorkRatingRevealed_uint256_uint8_uint8_EventFilter =
  TypedEventFilter<TaskWorkRatingRevealed_uint256_uint8_uint8_Event>;

export type TokenUnlockedEvent = TypedEvent<[], {}>;

export type TokenUnlockedEventFilter = TypedEventFilter<TokenUnlockedEvent>;

export type TokensBurnedEvent = TypedEvent<
  [string, string, BigNumber],
  { agent: string; token: string; amount: BigNumber }
>;

export type TokensBurnedEventFilter = TypedEventFilter<TokensBurnedEvent>;

export type TokensMintedEvent = TypedEvent<
  [string, string, BigNumber],
  { agent: string; who: string; amount: BigNumber }
>;

export type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;

export type TaskDomainSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  { taskId: BigNumber; domainId: BigNumber }
>;

export type TaskDomainSetEventFilter = TypedEventFilter<TaskDomainSetEvent>;

export type ColonyFundingRoleSetEvent = TypedEvent<
  [string, boolean],
  { user: string; setTo: boolean }
>;

export type ColonyFundingRoleSetEventFilter =
  TypedEventFilter<ColonyFundingRoleSetEvent>;

export type ColonyAdministrationRoleSetEvent = TypedEvent<
  [string, boolean],
  { user: string; setTo: boolean }
>;

export type ColonyAdministrationRoleSetEventFilter =
  TypedEventFilter<ColonyAdministrationRoleSetEvent>;

export type ColonyArchitectureRoleSetEvent = TypedEvent<
  [string, boolean],
  { user: string; setTo: boolean }
>;

export type ColonyArchitectureRoleSetEventFilter =
  TypedEventFilter<ColonyArchitectureRoleSetEvent>;

export type ColonyRootRoleSetEvent = TypedEvent<
  [string, boolean],
  { user: string; setTo: boolean }
>;

export type ColonyRootRoleSetEventFilter =
  TypedEventFilter<ColonyRootRoleSetEvent>;

export interface IColonyEvents extends BaseContract {
  contractName: "IColonyEvents";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IColonyEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "Annotation(address,bytes32,string)"(
      agent?: string | null,
      txHash?: BytesLike | null,
      metadata?: null
    ): AnnotationEventFilter;
    Annotation(
      agent?: string | null,
      txHash?: BytesLike | null,
      metadata?: null
    ): AnnotationEventFilter;

    "ArbitraryReputationUpdate(address,address,uint256,int256)"(
      agent?: null,
      user?: null,
      skillId?: null,
      amount?: null
    ): ArbitraryReputationUpdateEventFilter;
    ArbitraryReputationUpdate(
      agent?: null,
      user?: null,
      skillId?: null,
      amount?: null
    ): ArbitraryReputationUpdateEventFilter;

    "ColonyBootstrapped(address,address[],int256[])"(
      agent?: null,
      users?: null,
      amounts?: null
    ): ColonyBootstrapped_address_address_array_int256_array_EventFilter;
    "ColonyBootstrapped(address[],int256[])"(
      users?: null,
      amounts?: null
    ): ColonyBootstrapped_address_array_int256_array_EventFilter;
    "ColonyFundsClaimed(address,address,uint256,uint256)"(
      agent?: null,
      token?: null,
      fee?: null,
      payoutRemainder?: null
    ): ColonyFundsClaimed_address_address_uint256_uint256_EventFilter;
    "ColonyFundsClaimed(address,uint256,uint256)"(
      token?: null,
      fee?: null,
      payoutRemainder?: null
    ): ColonyFundsClaimed_address_uint256_uint256_EventFilter;
    "ColonyFundsMovedBetweenFundingPots(address,uint256,uint256,uint256,address)"(
      agent?: null,
      fromPot?: BigNumberish | null,
      toPot?: BigNumberish | null,
      amount?: null,
      token?: null
    ): ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventFilter;
    "ColonyFundsMovedBetweenFundingPots(uint256,uint256,uint256,address)"(
      fromPot?: BigNumberish | null,
      toPot?: BigNumberish | null,
      amount?: null,
      token?: null
    ): ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventFilter;
    "ColonyInitialised(address,address,address)"(
      agent?: null,
      colonyNetwork?: null,
      token?: null
    ): ColonyInitialised_address_address_address_EventFilter;
    "ColonyInitialised(address,address)"(
      colonyNetwork?: null,
      token?: null
    ): ColonyInitialised_address_address_EventFilter;

    "ColonyMetadata(address,string)"(
      agent?: null,
      metadata?: null
    ): ColonyMetadataEventFilter;
    ColonyMetadata(agent?: null, metadata?: null): ColonyMetadataEventFilter;

    "ColonyRewardInverseSet(address,uint256)"(
      agent?: null,
      rewardInverse?: null
    ): ColonyRewardInverseSet_address_uint256_EventFilter;
    "ColonyRewardInverseSet(uint256)"(
      rewardInverse?: null
    ): ColonyRewardInverseSet_uint256_EventFilter;
    "ColonyRoleSet(address,address,uint256,uint8,bool)"(
      agent?: null,
      user?: string | null,
      domainId?: BigNumberish | null,
      role?: BigNumberish | null,
      setTo?: null
    ): ColonyRoleSet_address_address_uint256_uint8_bool_EventFilter;
    "ColonyRoleSet(address,uint256,uint8,bool)"(
      user?: string | null,
      domainId?: BigNumberish | null,
      role?: BigNumberish | null,
      setTo?: null
    ): ColonyRoleSet_address_uint256_uint8_bool_EventFilter;
    "ColonyUpgraded(address,uint256,uint256)"(
      agent?: null,
      oldVersion?: null,
      newVersion?: null
    ): ColonyUpgraded_address_uint256_uint256_EventFilter;
    "ColonyUpgraded(uint256,uint256)"(
      oldVersion?: null,
      newVersion?: null
    ): ColonyUpgraded_uint256_uint256_EventFilter;
    "DomainAdded(address,uint256)"(
      agent?: null,
      domainId?: null
    ): DomainAdded_address_uint256_EventFilter;
    "DomainAdded(uint256)"(domainId?: null): DomainAdded_uint256_EventFilter;

    "DomainDeprecated(address,uint256,bool)"(
      agent?: null,
      domainId?: BigNumberish | null,
      deprecated?: null
    ): DomainDeprecatedEventFilter;
    DomainDeprecated(
      agent?: null,
      domainId?: BigNumberish | null,
      deprecated?: null
    ): DomainDeprecatedEventFilter;

    "DomainMetadata(address,uint256,string)"(
      agent?: null,
      domainId?: BigNumberish | null,
      metadata?: null
    ): DomainMetadataEventFilter;
    DomainMetadata(
      agent?: null,
      domainId?: BigNumberish | null,
      metadata?: null
    ): DomainMetadataEventFilter;

    "ExpenditureAdded(address,uint256)"(
      agent?: null,
      expenditureId?: null
    ): ExpenditureAdded_address_uint256_EventFilter;
    "ExpenditureAdded(uint256)"(
      expenditureId?: null
    ): ExpenditureAdded_uint256_EventFilter;
    "ExpenditureCancelled(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureCancelled_address_uint256_EventFilter;
    "ExpenditureCancelled(uint256)"(
      expenditureId?: BigNumberish | null
    ): ExpenditureCancelled_uint256_EventFilter;

    "ExpenditureClaimDelaySet(address,uint256,uint256,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      claimDelay?: null
    ): ExpenditureClaimDelaySetEventFilter;
    ExpenditureClaimDelaySet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      claimDelay?: null
    ): ExpenditureClaimDelaySetEventFilter;

    "ExpenditureFinalized(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureFinalized_address_uint256_EventFilter;
    "ExpenditureFinalized(uint256)"(
      expenditureId?: BigNumberish | null
    ): ExpenditureFinalized_uint256_EventFilter;

    "ExpenditureGlobalClaimDelaySet(address,uint256)"(
      agent?: null,
      globalClaimDelay?: null
    ): ExpenditureGlobalClaimDelaySetEventFilter;
    ExpenditureGlobalClaimDelaySet(
      agent?: null,
      globalClaimDelay?: null
    ): ExpenditureGlobalClaimDelaySetEventFilter;

    "ExpenditureLocked(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureLockedEventFilter;
    ExpenditureLocked(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureLockedEventFilter;

    "ExpenditureMetadataSet(address,uint256,string)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      metadata?: null
    ): ExpenditureMetadataSetEventFilter;
    ExpenditureMetadataSet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      metadata?: null
    ): ExpenditureMetadataSetEventFilter;

    "ExpenditurePayoutModifierSet(address,uint256,uint256,int256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      payoutModifier?: null
    ): ExpenditurePayoutModifierSetEventFilter;
    ExpenditurePayoutModifierSet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      payoutModifier?: null
    ): ExpenditurePayoutModifierSetEventFilter;

    "ExpenditurePayoutSet(address,uint256,uint256,address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      token?: string | null,
      amount?: null
    ): ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventFilter;
    "ExpenditurePayoutSet(uint256,uint256,address,uint256)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      token?: string | null,
      amount?: null
    ): ExpenditurePayoutSet_uint256_uint256_address_uint256_EventFilter;
    "ExpenditureRecipientSet(address,uint256,uint256,address)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      recipient?: string | null
    ): ExpenditureRecipientSet_address_uint256_uint256_address_EventFilter;
    "ExpenditureRecipientSet(uint256,uint256,address)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      recipient?: string | null
    ): ExpenditureRecipientSet_uint256_uint256_address_EventFilter;
    "ExpenditureSkillSet(address,uint256,uint256,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): ExpenditureSkillSet_address_uint256_uint256_uint256_EventFilter;
    "ExpenditureSkillSet(uint256,uint256,uint256)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): ExpenditureSkillSet_uint256_uint256_uint256_EventFilter;
    "ExpenditureTransferred(address,uint256,address)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      owner?: string | null
    ): ExpenditureTransferred_address_uint256_address_EventFilter;
    "ExpenditureTransferred(uint256,address)"(
      expenditureId?: BigNumberish | null,
      owner?: string | null
    ): ExpenditureTransferred_uint256_address_EventFilter;

    "FundingPotAdded(uint256)"(fundingPotId?: null): FundingPotAddedEventFilter;
    FundingPotAdded(fundingPotId?: null): FundingPotAddedEventFilter;

    "MetaTransactionExecuted(address,address,bytes)"(
      userAddress?: null,
      relayerAddress?: null,
      payload?: null
    ): MetaTransactionExecutedEventFilter;
    MetaTransactionExecuted(
      userAddress?: null,
      relayerAddress?: null,
      payload?: null
    ): MetaTransactionExecutedEventFilter;

    "PaymentAdded(address,uint256)"(
      agent?: null,
      paymentId?: null
    ): PaymentAdded_address_uint256_EventFilter;
    "PaymentAdded(uint256)"(paymentId?: null): PaymentAdded_uint256_EventFilter;

    "PaymentFinalized(address,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null
    ): PaymentFinalizedEventFilter;
    PaymentFinalized(
      agent?: null,
      paymentId?: BigNumberish | null
    ): PaymentFinalizedEventFilter;

    "PaymentPayoutSet(address,uint256,address,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PaymentPayoutSetEventFilter;
    PaymentPayoutSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PaymentPayoutSetEventFilter;

    "PaymentRecipientSet(address,uint256,address)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      recipient?: null
    ): PaymentRecipientSetEventFilter;
    PaymentRecipientSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      recipient?: null
    ): PaymentRecipientSetEventFilter;

    "PaymentSkillSet(address,uint256,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      skillId?: null
    ): PaymentSkillSetEventFilter;
    PaymentSkillSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      skillId?: null
    ): PaymentSkillSetEventFilter;

    "PayoutClaimed(address,uint256,address,uint256)"(
      agent?: null,
      fundingPotId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PayoutClaimed_address_uint256_address_uint256_EventFilter;
    "PayoutClaimed(uint256,address,uint256)"(
      fundingPotId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PayoutClaimed_uint256_address_uint256_EventFilter;

    "RecoveryModeEntered(address)"(user?: null): RecoveryModeEnteredEventFilter;
    RecoveryModeEntered(user?: null): RecoveryModeEnteredEventFilter;

    "RecoveryModeExitApproved(address)"(
      user?: null
    ): RecoveryModeExitApprovedEventFilter;
    RecoveryModeExitApproved(user?: null): RecoveryModeExitApprovedEventFilter;

    "RecoveryModeExited(address)"(user?: null): RecoveryModeExitedEventFilter;
    RecoveryModeExited(user?: null): RecoveryModeExitedEventFilter;

    "RecoveryRoleSet(address,bool)"(
      user?: string | null,
      setTo?: null
    ): RecoveryRoleSetEventFilter;
    RecoveryRoleSet(
      user?: string | null,
      setTo?: null
    ): RecoveryRoleSetEventFilter;

    "RecoveryStorageSlotSet(address,uint256,bytes32,bytes32)"(
      user?: null,
      slot?: null,
      fromValue?: null,
      toValue?: null
    ): RecoveryStorageSlotSetEventFilter;
    RecoveryStorageSlotSet(
      user?: null,
      slot?: null,
      fromValue?: null,
      toValue?: null
    ): RecoveryStorageSlotSetEventFilter;

    "RewardPayoutClaimed(uint256,address,uint256,uint256)"(
      rewardPayoutId?: null,
      user?: null,
      fee?: null,
      rewardRemainder?: null
    ): RewardPayoutClaimedEventFilter;
    RewardPayoutClaimed(
      rewardPayoutId?: null,
      user?: null,
      fee?: null,
      rewardRemainder?: null
    ): RewardPayoutClaimedEventFilter;

    "RewardPayoutCycleEnded(address,uint256)"(
      agent?: null,
      rewardPayoutId?: null
    ): RewardPayoutCycleEnded_address_uint256_EventFilter;
    "RewardPayoutCycleEnded(uint256)"(
      rewardPayoutId?: null
    ): RewardPayoutCycleEnded_uint256_EventFilter;
    "RewardPayoutCycleStarted(address,uint256)"(
      agent?: null,
      rewardPayoutId?: null
    ): RewardPayoutCycleStarted_address_uint256_EventFilter;
    "RewardPayoutCycleStarted(uint256)"(
      rewardPayoutId?: null
    ): RewardPayoutCycleStarted_uint256_EventFilter;
    "TaskAdded(address,uint256)"(
      agent?: null,
      taskId?: null
    ): TaskAdded_address_uint256_EventFilter;
    "TaskAdded(uint256)"(taskId?: null): TaskAdded_uint256_EventFilter;

    "TaskBriefSet(uint256,bytes32)"(
      taskId?: BigNumberish | null,
      specificationHash?: null
    ): TaskBriefSetEventFilter;
    TaskBriefSet(
      taskId?: BigNumberish | null,
      specificationHash?: null
    ): TaskBriefSetEventFilter;

    "TaskCanceled(uint256)"(
      taskId?: BigNumberish | null
    ): TaskCanceledEventFilter;
    TaskCanceled(taskId?: BigNumberish | null): TaskCanceledEventFilter;

    "TaskChangedViaSignatures(address[])"(
      reviewerAddresses?: null
    ): TaskChangedViaSignaturesEventFilter;
    TaskChangedViaSignatures(
      reviewerAddresses?: null
    ): TaskChangedViaSignaturesEventFilter;

    "TaskCompleted(address,uint256)"(
      agent?: null,
      taskId?: BigNumberish | null
    ): TaskCompleted_address_uint256_EventFilter;
    "TaskCompleted(uint256)"(
      taskId?: BigNumberish | null
    ): TaskCompleted_uint256_EventFilter;
    "TaskDeliverableSubmitted(address,uint256,bytes32)"(
      agent?: null,
      taskId?: BigNumberish | null,
      deliverableHash?: null
    ): TaskDeliverableSubmitted_address_uint256_bytes32_EventFilter;
    "TaskDeliverableSubmitted(uint256,bytes32)"(
      taskId?: BigNumberish | null,
      deliverableHash?: null
    ): TaskDeliverableSubmitted_uint256_bytes32_EventFilter;

    "TaskDueDateSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      dueDate?: null
    ): TaskDueDateSetEventFilter;
    TaskDueDateSet(
      taskId?: BigNumberish | null,
      dueDate?: null
    ): TaskDueDateSetEventFilter;

    "TaskFinalized(address,uint256)"(
      agent?: null,
      taskId?: BigNumberish | null
    ): TaskFinalized_address_uint256_EventFilter;
    "TaskFinalized(uint256)"(
      taskId?: BigNumberish | null
    ): TaskFinalized_uint256_EventFilter;

    "TaskPayoutSet(uint256,uint8,address,uint256)"(
      taskId?: BigNumberish | null,
      role?: null,
      token?: null,
      amount?: null
    ): TaskPayoutSetEventFilter;
    TaskPayoutSet(
      taskId?: BigNumberish | null,
      role?: null,
      token?: null,
      amount?: null
    ): TaskPayoutSetEventFilter;

    "TaskRoleUserSet(uint256,uint8,address)"(
      taskId?: BigNumberish | null,
      role?: null,
      user?: string | null
    ): TaskRoleUserSetEventFilter;
    TaskRoleUserSet(
      taskId?: BigNumberish | null,
      role?: null,
      user?: string | null
    ): TaskRoleUserSetEventFilter;

    "TaskSkillSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): TaskSkillSetEventFilter;
    TaskSkillSet(
      taskId?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): TaskSkillSetEventFilter;

    "TaskWorkRatingRevealed(address,uint256,uint8,uint8)"(
      agent?: null,
      taskId?: BigNumberish | null,
      role?: null,
      rating?: null
    ): TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventFilter;
    "TaskWorkRatingRevealed(uint256,uint8,uint8)"(
      taskId?: BigNumberish | null,
      role?: null,
      rating?: null
    ): TaskWorkRatingRevealed_uint256_uint8_uint8_EventFilter;

    "TokenUnlocked()"(): TokenUnlockedEventFilter;
    TokenUnlocked(): TokenUnlockedEventFilter;

    "TokensBurned(address,address,uint256)"(
      agent?: null,
      token?: null,
      amount?: null
    ): TokensBurnedEventFilter;
    TokensBurned(
      agent?: null,
      token?: null,
      amount?: null
    ): TokensBurnedEventFilter;

    "TokensMinted(address,address,uint256)"(
      agent?: null,
      who?: null,
      amount?: null
    ): TokensMintedEventFilter;
    TokensMinted(
      agent?: null,
      who?: null,
      amount?: null
    ): TokensMintedEventFilter;

    "TaskDomainSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      domainId?: BigNumberish | null
    ): TaskDomainSetEventFilter;
    TaskDomainSet(
      taskId?: BigNumberish | null,
      domainId?: BigNumberish | null
    ): TaskDomainSetEventFilter;

    "ColonyFundingRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyFundingRoleSetEventFilter;
    ColonyFundingRoleSet(
      user?: null,
      setTo?: null
    ): ColonyFundingRoleSetEventFilter;

    "ColonyAdministrationRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyAdministrationRoleSetEventFilter;
    ColonyAdministrationRoleSet(
      user?: null,
      setTo?: null
    ): ColonyAdministrationRoleSetEventFilter;

    "ColonyArchitectureRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyArchitectureRoleSetEventFilter;
    ColonyArchitectureRoleSet(
      user?: null,
      setTo?: null
    ): ColonyArchitectureRoleSetEventFilter;

    "ColonyRootRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyRootRoleSetEventFilter;
    ColonyRootRoleSet(user?: null, setTo?: null): ColonyRootRoleSetEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
