/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { CoinMachine } from "./CoinMachine";

export class CoinMachineFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<CoinMachine> {
    return super.deploy(overrides) as Promise<CoinMachine>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): CoinMachine {
    return super.attach(address) as CoinMachine;
  }
  connect(signer: Signer): CoinMachineFactory {
    return super.connect(signer) as CoinMachineFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinMachine {
    return new Contract(address, _abi, signerOrProvider) as CoinMachine;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "owner_",
        type: "address"
      }
    ],
    name: "setOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "authority_",
        type: "address"
      }
    ],
    name: "setAuthority",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "authority",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "getDeprecated",
    outputs: [
      {
        name: "deprecated",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "buyer",
        type: "address"
      },
      {
        indexed: false,
        name: "numTokens",
        type: "uint256"
      },
      {
        indexed: false,
        name: "totalCost",
        type: "uint256"
      }
    ],
    name: "TokensBought",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "activePeriod",
        type: "uint256"
      },
      {
        indexed: false,
        name: "currentPeriod",
        type: "uint256"
      }
    ],
    name: "PeriodUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "authority",
        type: "address"
      }
    ],
    name: "LogSetAuthority",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address"
      }
    ],
    name: "LogSetOwner",
    type: "event"
  },
  {
    constant: true,
    inputs: [],
    name: "version",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_colony",
        type: "address"
      }
    ],
    name: "install",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "finishUpgrade",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_deprecated",
        type: "bool"
      }
    ],
    name: "deprecate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "uninstall",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_purchaseToken",
        type: "address"
      },
      {
        name: "_periodLength",
        type: "uint256"
      },
      {
        name: "_windowSize",
        type: "uint256"
      },
      {
        name: "_targetPerPeriod",
        type: "uint256"
      },
      {
        name: "_maxPerPeriod",
        type: "uint256"
      },
      {
        name: "_startingPrice",
        type: "uint256"
      }
    ],
    name: "initialise",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_numTokens",
        type: "uint256"
      }
    ],
    name: "buyTokens",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "updatePeriod",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPeriodLength",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getWindowSize",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getTargetPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getMaxPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getNumAvailable",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040819052600180546001600160a01b03191633908117909155907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26114fc806100516000396000f3fe6080604052600436106101145760003560e01c80638410956a116100a0578063a83627de11610064578063a83627de14610299578063bf7e214f146102ae578063eb91d37e146102d0578063fb3d8ee5146102e5578063fcf6ba93146102fa57610114565b80638410956a1461020d5780638469ddc71461022d5780638da5cb5b146102425780639251cff414610264578063a0e3ad261461028457610114565b80632a85c366116100e75780632a85c3661461019b578063340df28f146101b05780633610724e146101c557806354fd4d50146101d85780637a9e5e4b146101ed57610114565b80630d638f301461011957806313af4035146101305780631f7ea81f146101505780632a1b8f9b1461017b575b600080fd5b34801561012557600080fd5b5061012e61031c565b005b34801561013c57600080fd5b5061012e61014b366004610df6565b610368565b34801561015c57600080fd5b506101656103ed565b60405161017291906113fd565b60405180910390f35b34801561018757600080fd5b5061012e610196366004610df6565b6103f4565b3480156101a757600080fd5b50610165610477565b3480156101bc57600080fd5b5061012e61047d565b61012e6101d3366004610efd565b6104b4565b3480156101e457600080fd5b506101656106cd565b3480156101f957600080fd5b5061012e610208366004610edf565b6106d2565b34801561021957600080fd5b5061012e610228366004610e1c565b610753565b34801561023957600080fd5b50610165610935565b34801561024e57600080fd5b5061025761093b565b604051610172919061124e565b34801561027057600080fd5b5061012e61027f366004610ea3565b61094a565b34801561029057600080fd5b506101656109ae565b3480156102a557600080fd5b5061012e6109b4565b3480156102ba57600080fd5b506102c3610a8b565b604051610172919061131f565b3480156102dc57600080fd5b50610165610a9a565b3480156102f157600080fd5b50610165610b2f565b34801561030657600080fd5b5061030f610b55565b6040516101729190611311565b610332336000356001600160e01b031916610b5a565b61035a57604051600160e51b62461bcd0281526004016103519061132d565b60405180910390fd5b6004546001600160a01b0316ff5b61037e336000356001600160e01b031916610b5a565b61039d57604051600160e51b62461bcd0281526004016103519061132d565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600a545b90565b61040a336000356001600160e01b031916610b5a565b61042957604051600160e51b62461bcd0281526004016103519061132d565b6004546001600160a01b03161561045557604051600160e51b62461bcd0281526004016103519061139d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60095490565b610493336000356001600160e01b031916610b5a565b6104b257604051600160e51b62461bcd0281526004016103519061132d565b565b600354600160a01b900460ff16156104e157604051600160e51b62461bcd028152600401610351906113ed565b6104e96109b4565b60006104fb82600d54600a5403610c3b565b9050600061050b82600c54610c52565b600e805482019055600d8054840190819055600a54919250111561052b57fe5b6005546001600160a01b031661059c578034101561055e57604051600160e51b62461bcd028152600401610351906113bd565b803411156105975760405133903483900380156108fc02916000818181858888f19350505050158015610595573d6000803e3d6000fd5b505b610627565b600554604051600160e01b6323b872dd0281526001600160a01b03909116906323b872dd906105d39033903090869060040161125c565b602060405180830381600087803b1580156105ed57600080fd5b505af1158015610601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106259190810190610ec1565b505b60048054604051600160e01b638f6811a30281526001600160a01b0390911691638f6811a39161065b9133918791016112ac565b600060405180830381600087803b15801561067557600080fd5b505af1158015610689573d6000803e3d6000fd5b505050507f8442948036198f1146d3a63c3db355d7e0295c2cc5676c755990445da4fdc1c93384836040516106c0939291906112ce565b60405180910390a1505050565b600190565b6106e8336000356001600160e01b031916610b5a565b61070757604051600160e51b62461bcd0281526004016103519061132d565b600080546001600160a01b0319166001600160a01b03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b60048054604051600160e11b635597bd710281526001600160a01b039091169163ab2f7ae29161078a913391600191829101611284565b60206040518083038186803b1580156107a257600080fd5b505afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107da9190810190610ec1565b6107f957604051600160e51b62461bcd0281526004016103519061133d565b600b541561081c57604051600160e51b62461bcd0281526004016103519061137d565b6000851161083f57604051600160e51b62461bcd028152600401610351906113cd565b6000841161086257604051600160e51b62461bcd0281526004016103519061135d565b6101ff84111561088757604051600160e51b62461bcd028152600401610351906113dd565b600083116108aa57604051600160e51b62461bcd028152600401610351906113ad565b828210156108cd57604051600160e51b62461bcd0281526004016103519061138d565b600580546001600160a01b0319166001600160a01b03881617905560068590556108fb600260018601610c8b565b60075560088490556009839055600a829055600c81905561091a610cab565b600b5560095461092a9082610c52565b600f55505050505050565b60065490565b6001546001600160a01b031681565b610960336000356001600160e01b031916610b5a565b61097f57604051600160e51b62461bcd0281526004016103519061132d565b60038054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b60085490565b60006109be610cab565b600b5490915081811015610a4e576109da600754600e54610c52565b6109f2600754670de0b6b3a764000003600f54610c52565b01600f556000600e819055600d55600b548203600019018015610a3457610a30610a28600754670de0b6b3a76400000383610cbe565b600f54610c52565b600f555b82600b81905550610a49600f54600954610c8b565b600c55505b7f5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a8183604051610a7f92919061140b565b60405180910390a15050565b6000546001600160a01b031681565b600080610aa5610cab565b905080600b541415610abb575050600c546103f1565b600f54600754600e54610ace9190610c52565b610ae4600754670de0b6b3a76400000383610c52565b600b54910191508203600019018015610b1957610b16610b10600754670de0b6b3a76400000383610cbe565b83610c52565b91505b610b2582600954610c8b565b93505050506103f1565b6000610b39610cab565b600b5414610b48576000610b4c565b600d545b600a5403905090565b600090565b60006001600160a01b038316301415610b7557506001610c35565b6001546001600160a01b0384811691161415610b9357506001610c35565b6000546001600160a01b0316610bab57506000610c35565b600054604051600160e01b63b70096130281526001600160a01b039091169063b700961390610be2908690309087906004016112e9565b60206040518083038186803b158015610bfa57600080fd5b505afa158015610c0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c329190810190610ec1565b90505b92915050565b600081831115610c4b5781610c32565b5090919050565b6000670de0b6b3a7640000610c7c610c6a8585610cd5565b6002670de0b6b3a76400005b04610d0f565b81610c8357fe5b049392505050565b600081610c7c610ca385670de0b6b3a7640000610cd5565b600285610c76565b60006006544281610cb857fe5b04905090565b6000633b9aca00610c7c84633b9aca000284610d35565b6000811580610cf057505080820282828281610ced57fe5b04145b610c3557604051600160e51b62461bcd0281526004016103519061134d565b80820182811015610c3557604051600160e51b62461bcd0281526004016103519061136d565b600060028206610d51576b033b2e3c9fd0803ce8000000610d53565b825b90506002820491505b8115610c3557610d6c8384610d8f565b92506002820615610d8457610d818184610d8f565b90505b600282049150610d5c565b60006b033b2e3c9fd0803ce8000000610c7c610dab8585610cd5565b60026b033b2e3c9fd0803ce8000000610c76565b8035610c3581611493565b8035610c35816114a7565b8051610c35816114a7565b8035610c35816114b0565b8035610c35816114b9565b600060208284031215610e0857600080fd5b6000610e148484610dbf565b949350505050565b60008060008060008060c08789031215610e3557600080fd5b6000610e418989610dbf565b9650506020610e5289828a01610deb565b9550506040610e6389828a01610deb565b9450506060610e7489828a01610deb565b9350506080610e8589828a01610deb565b92505060a0610e9689828a01610deb565b9150509295509295509295565b600060208284031215610eb557600080fd5b6000610e148484610dca565b600060208284031215610ed357600080fd5b6000610e148484610dd5565b600060208284031215610ef157600080fd5b6000610e148484610de0565b600060208284031215610f0f57600080fd5b6000610e148484610deb565b610f2481611465565b82525050565b610f2481611422565b610f248161142d565b610f2481611432565b610f248161143f565b610f2481611470565b610f248161147b565b6000610f6d601483611419565b7f64732d617574682d756e617574686f72697a6564000000000000000000000000815260200192915050565b6000610fa6601583611419565b7f636f696e2d6d616368696e652d6e6f742d726f6f740000000000000000000000815260200192915050565b6000610fdf601483611419565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000815260200192915050565b6000611018601d83611419565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d736d616c6c000000815260200192915050565b6000611051601483611419565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000815260200192915050565b600061108a602083611419565b7f636f696e2d6d616368696e652d616c72656164792d696e697469616c69736564815260200192915050565b60006110c3601a83611419565b7f636f696e2d6d616368696e652d6d61782d746f6f2d736d616c6c000000000000815260200192915050565b60006110fc601b83611419565b7f657874656e73696f6e2d616c72656164792d696e7374616c6c65640000000000815260200192915050565b6000611135601d83611419565b7f636f696e2d6d616368696e652d7461726765742d746f6f2d736d616c6c000000815260200192915050565b600061116e601f83611419565b7f636f696e2d6d616368696e652d696e73756666696369656e742d66756e647300815260200192915050565b60006111a7601d83611419565b7f636f696e2d6d616368696e652d706572696f642d746f6f2d736d616c6c000000815260200192915050565b60006111e0601d83611419565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d6c61726765000000815260200192915050565b6000611219601b83611419565b7f636f6c6f6e792d657874656e73696f6e2d646570726563617465640000000000815260200192915050565b610f24816103f1565b60208101610c358284610f2a565b6060810161126a8286610f1b565b6112776020830185610f2a565b610e146040830184611245565b606081016112928286610f1b565b61129f6020830185610f57565b610e146040830184610f4e565b604081016112ba8285610f1b565b6112c76020830184611245565b9392505050565b606081016112dc8286610f1b565b6112776020830185611245565b606081016112f78286610f2a565b6113046020830185610f2a565b610e146040830184610f3c565b60208101610c358284610f33565b60208101610c358284610f45565b60208082528101610c3581610f60565b60208082528101610c3581610f99565b60208082528101610c3581610fd2565b60208082528101610c358161100b565b60208082528101610c3581611044565b60208082528101610c358161107d565b60208082528101610c35816110b6565b60208082528101610c35816110ef565b60208082528101610c3581611128565b60208082528101610c3581611161565b60208082528101610c358161119a565b60208082528101610c35816111d3565b60208082528101610c358161120c565b60208101610c358284611245565b604081016112ba8285611245565b90815260200190565b6000610c3582611459565b151590565b6001600160e01b03191690565b6000610c3582611422565b8061145481611486565b919050565b6001600160a01b031690565b6000610c358261143f565b6000610c358261144a565b6000610c35826103f1565b6008811061149057fe5b50565b61149c81611422565b811461149057600080fd5b61149c8161142d565b61149c8161143f565b61149c816103f156fea265627a7a7230582084ef17164f81661966d5bc9d9e5385d1f810da232a146ab5fd1c7a6d07d3bfc36c6578706572696d656e74616cf50037";
