/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { CoinMachine } from "./CoinMachine";

export class CoinMachineFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _colony: string,
    overrides?: TransactionOverrides
  ): Promise<CoinMachine> {
    return super.deploy(_colony, overrides) as Promise<CoinMachine>;
  }
  getDeployTransaction(
    _colony: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_colony, overrides);
  }
  attach(address: string): CoinMachine {
    return super.attach(address) as CoinMachine;
  }
  connect(signer: Signer): CoinMachineFactory {
    return super.connect(signer) as CoinMachineFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinMachine {
    return new Contract(address, _abi, signerOrProvider) as CoinMachine;
  }
}

const _abi = [
  {
    inputs: [
      {
        name: "_colony",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "buyer",
        type: "address"
      },
      {
        indexed: false,
        name: "numTokens",
        type: "uint256"
      },
      {
        indexed: false,
        name: "totalCost",
        type: "uint256"
      }
    ],
    name: "TokensBought",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "activePeriod",
        type: "uint256"
      },
      {
        indexed: false,
        name: "currentPeriod",
        type: "uint256"
      }
    ],
    name: "PeriodUpdated",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_purchaseToken",
        type: "address"
      },
      {
        name: "_periodLength",
        type: "uint256"
      },
      {
        name: "_windowSize",
        type: "uint256"
      },
      {
        name: "_targetPerPeriod",
        type: "uint256"
      },
      {
        name: "_maxPerPeriod",
        type: "uint256"
      },
      {
        name: "_startingPrice",
        type: "uint256"
      }
    ],
    name: "initialise",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_numTokens",
        type: "uint256"
      }
    ],
    name: "buyTokens",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "updatePeriod",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPeriodLength",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getWindowSize",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getTargetPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getMaxPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getNumAvailable",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051602080610ea3833981018060405261002f9190810190610065565b600080546001600160a01b0319166001600160a01b03929092169190911790556100b3565b805161005f8161009c565b92915050565b60006020828403121561007757600080fd5b60006100838484610054565b949350505050565b60006001600160a01b03821661005f565b6100a58161008b565b81146100b057600080fd5b50565b610de1806100c26000396000f3fe6080604052600436106100865760003560e01c80638469ddc7116100595780638469ddc714610100578063a0e3ad2614610115578063a83627de1461012a578063eb91d37e1461013f578063fb3d8ee51461015457610086565b80631f7ea81f1461008b5780632a85c366146100b65780633610724e146100cb5780638410956a146100e0575b600080fd5b34801561009757600080fd5b506100a0610169565b6040516100ad9190610cf8565b60405180910390f35b3480156100c257600080fd5b506100a0610170565b6100de6100d9366004610940565b610176565b005b3480156100ec57600080fd5b506100de6100fb366004610893565b61036c565b34801561010c57600080fd5b506100a061054c565b34801561012157600080fd5b506100a0610552565b34801561013657600080fd5b506100de610558565b34801561014b57600080fd5b506100a061062f565b34801561016057600080fd5b506100a06106c4565b6006545b90565b60055490565b61017e610558565b600061019082600954600654036106ea565b905060006101a082600854610705565b600a8054820190556009805484019081905560065491925011156101c057fe5b6001546001600160a01b031661023a57803410156101fc57604051600160e51b62461bcd0281526004016101f390610cc8565b60405180910390fd5b803411156102355760405133903483900380156108fc02916000818181858888f19350505050158015610233573d6000803e3d6000fd5b505b6102c5565b600154604051600160e01b6323b872dd0281526001600160a01b03909116906323b872dd9061027190339030908690600401610bcb565b602060405180830381600087803b15801561028b57600080fd5b505af115801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102c3919081019061091a565b505b600054604051600160e01b638f6811a30281526001600160a01b0390911690638f6811a3906102fa9033908690600401610c1b565b600060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b505050507f8442948036198f1146d3a63c3db355d7e0295c2cc5676c755990445da4fdc1c933848360405161035f93929190610c3d565b60405180910390a1505050565b600054604051600160e11b635597bd710281526001600160a01b039091169063ab2f7ae2906103a49033906001908190600401610bf3565b60206040518083038186803b1580156103bc57600080fd5b505afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103f4919081019061091a565b61041357604051600160e51b62461bcd0281526004016101f390610c58565b6007541561043657604051600160e51b62461bcd0281526004016101f390610c98565b6000851161045957604051600160e51b62461bcd0281526004016101f390610cd8565b6000841161047c57604051600160e51b62461bcd0281526004016101f390610c78565b6101ff8411156104a157604051600160e51b62461bcd0281526004016101f390610ce8565b600083116104c457604051600160e51b62461bcd0281526004016101f390610cb8565b828210156104e757604051600160e51b62461bcd0281526004016101f390610ca8565b600180546001600160a01b0319166001600160a01b038816178155600286815561051291860161073e565b600355600484905560058390556006829055600881905561053161075e565b6007556005546105419082610705565b600b55505050505050565b60025490565b60045490565b600061056261075e565b600754909150818110156105f25761057e600354600a54610705565b610596600354670de0b6b3a764000003600b54610705565b01600b556000600a81905560095560075482036000190180156105d8576105d46105cc600354670de0b6b3a76400000383610771565b600b54610705565b600b555b826007819055506105ed600b5460055461073e565b600855505b7f5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a8183604051610623929190610d06565b60405180910390a15050565b60008061063a61075e565b905080600754141561065057505060085461016d565b600b54600354600a546106639190610705565b610679600354670de0b6b3a76400000383610705565b6007549101915082036000190180156106ae576106ab6106a5600354670de0b6b3a76400000383610771565b83610705565b91505b6106ba8260055461073e565b935050505061016d565b60006106ce61075e565b600754146106dd5760006106e1565b6009545b60065403905090565b6000818311156106fa57816106fc565b825b90505b92915050565b6000670de0b6b3a764000061072f61071d8585610788565b6002670de0b6b3a76400005b046107c2565b8161073657fe5b049392505050565b60008161072f61075685670de0b6b3a7640000610788565b600285610729565b6000600254428161076b57fe5b04905090565b6000633b9aca0061072f84633b9aca0002846107e8565b60008115806107a3575050808202828282816107a057fe5b04145b6106ff57604051600160e51b62461bcd0281526004016101f390610c68565b808201828110156106ff57604051600160e51b62461bcd0281526004016101f390610c88565b600060028206610804576b033b2e3c9fd0803ce8000000610806565b825b90506002820491505b81156106ff5761081f8384610842565b92506002820615610837576108348184610842565b90505b60028204915061080f565b60006b033b2e3c9fd0803ce800000061072f61085e8585610788565b60026b033b2e3c9fd0803ce8000000610729565b80356106ff81610d81565b80516106ff81610d95565b80356106ff81610d9e565b60008060008060008060c087890312156108ac57600080fd5b60006108b88989610872565b96505060206108c989828a01610888565b95505060406108da89828a01610888565b94505060606108eb89828a01610888565b93505060806108fc89828a01610888565b92505060a061090d89828a01610888565b9150509295509295509295565b60006020828403121561092c57600080fd5b6000610938848461087d565b949350505050565b60006020828403121561095257600080fd5b60006109388484610888565b61096781610d48565b82525050565b61096781610d1d565b61096781610d53565b61096781610d5e565b6000610995601583610d14565b7f636f696e2d6d616368696e652d6e6f742d726f6f740000000000000000000000815260200192915050565b60006109ce601483610d14565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000815260200192915050565b6000610a07601d83610d14565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d736d616c6c000000815260200192915050565b6000610a40601483610d14565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000815260200192915050565b6000610a79602083610d14565b7f636f696e2d6d616368696e652d616c72656164792d696e697469616c69736564815260200192915050565b6000610ab2601a83610d14565b7f636f696e2d6d616368696e652d6d61782d746f6f2d736d616c6c000000000000815260200192915050565b6000610aeb601d83610d14565b7f636f696e2d6d616368696e652d7461726765742d746f6f2d736d616c6c000000815260200192915050565b6000610b24601f83610d14565b7f636f696e2d6d616368696e652d696e73756666696369656e742d66756e647300815260200192915050565b6000610b5d601d83610d14565b7f636f696e2d6d616368696e652d706572696f642d746f6f2d736d616c6c000000815260200192915050565b6000610b96601d83610d14565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d6c61726765000000815260200192915050565b6109678161016d565b60608101610bd9828661095e565b610be6602083018561096d565b6109386040830184610bc2565b60608101610c01828661095e565b610c0e602083018561097f565b6109386040830184610976565b60408101610c29828561095e565b610c366020830184610bc2565b9392505050565b60608101610c4b828661095e565b610be66020830185610bc2565b602080825281016106ff81610988565b602080825281016106ff816109c1565b602080825281016106ff816109fa565b602080825281016106ff81610a33565b602080825281016106ff81610a6c565b602080825281016106ff81610aa5565b602080825281016106ff81610ade565b602080825281016106ff81610b17565b602080825281016106ff81610b50565b602080825281016106ff81610b89565b602081016106ff8284610bc2565b60408101610c298285610bc2565b90815260200190565b60006106ff82610d3c565b151590565b80610d3781610d74565b919050565b6001600160a01b031690565b60006106ff82610d69565b60006106ff82610d2d565b60006106ff8261016d565b60006106ff82610d1d565b60078110610d7e57fe5b50565b610d8a81610d1d565b8114610d7e57600080fd5b610d8a81610d28565b610d8a8161016d56fea265627a7a72305820d5f720b1a65739663ed6012ba5b14ed48a5567e53065d87da6f2f7781fdbbaec6c6578706572696d656e74616cf50037";
