/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { CoinMachine } from "./CoinMachine";

export class CoinMachineFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<CoinMachine> {
    return super.deploy(overrides) as Promise<CoinMachine>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): CoinMachine {
    return super.attach(address) as CoinMachine;
  }
  connect(signer: Signer): CoinMachineFactory {
    return super.connect(signer) as CoinMachineFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinMachine {
    return new Contract(address, _abi, signerOrProvider) as CoinMachine;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "owner_",
        type: "address"
      }
    ],
    name: "setOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "authority_",
        type: "address"
      }
    ],
    name: "setAuthority",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "authority",
    outputs: [
      {
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "buyer",
        type: "address"
      },
      {
        indexed: false,
        name: "numTokens",
        type: "uint256"
      },
      {
        indexed: false,
        name: "totalCost",
        type: "uint256"
      }
    ],
    name: "TokensBought",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "activePeriod",
        type: "uint256"
      },
      {
        indexed: false,
        name: "currentPeriod",
        type: "uint256"
      }
    ],
    name: "PeriodUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "authority",
        type: "address"
      }
    ],
    name: "LogSetAuthority",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address"
      }
    ],
    name: "LogSetOwner",
    type: "event"
  },
  {
    constant: true,
    inputs: [],
    name: "version",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_colony",
        type: "address"
      }
    ],
    name: "install",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "finishUpgrade",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_deprecated",
        type: "bool"
      }
    ],
    name: "deprecate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "uninstall",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_purchaseToken",
        type: "address"
      },
      {
        name: "_periodLength",
        type: "uint256"
      },
      {
        name: "_windowSize",
        type: "uint256"
      },
      {
        name: "_targetPerPeriod",
        type: "uint256"
      },
      {
        name: "_maxPerPeriod",
        type: "uint256"
      },
      {
        name: "_startingPrice",
        type: "uint256"
      }
    ],
    name: "initialise",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_numTokens",
        type: "uint256"
      }
    ],
    name: "buyTokens",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "updatePeriod",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPeriodLength",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getWindowSize",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getTargetPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getMaxPerPeriod",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getNumAvailable",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040819052600180546001600160a01b03191633908117909155907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26114b3806100516000396000f3fe6080604052600436106101095760003560e01c80638410956a11610095578063a0e3ad2611610064578063a0e3ad2614610279578063a83627de1461028e578063bf7e214f146102a3578063eb91d37e146102c5578063fb3d8ee5146102da57610109565b80638410956a146102025780638469ddc7146102225780638da5cb5b146102375780639251cff41461025957610109565b80632a85c366116100dc5780632a85c36614610190578063340df28f146101a55780633610724e146101ba57806354fd4d50146101cd5780637a9e5e4b146101e257610109565b80630d638f301461010e57806313af4035146101255780631f7ea81f146101455780632a1b8f9b14610170575b600080fd5b34801561011a57600080fd5b506101236102ef565b005b34801561013157600080fd5b50610123610140366004610dc4565b61033b565b34801561015157600080fd5b5061015a6103c0565b60405161016791906113b4565b60405180910390f35b34801561017c57600080fd5b5061012361018b366004610dc4565b6103c7565b34801561019c57600080fd5b5061015a61044a565b3480156101b157600080fd5b50610123610450565b6101236101c8366004610ecb565b610487565b3480156101d957600080fd5b5061015a6106a0565b3480156101ee57600080fd5b506101236101fd366004610ead565b6106a5565b34801561020e57600080fd5b5061012361021d366004610dea565b610726565b34801561022e57600080fd5b5061015a610908565b34801561024357600080fd5b5061024c61090e565b6040516101679190611213565b34801561026557600080fd5b50610123610274366004610e71565b61091d565b34801561028557600080fd5b5061015a610981565b34801561029a57600080fd5b50610123610987565b3480156102af57600080fd5b506102b8610a5e565b60405161016791906112d6565b3480156102d157600080fd5b5061015a610a6d565b3480156102e657600080fd5b5061015a610b02565b610305336000356001600160e01b031916610b28565b61032d57604051600160e51b62461bcd028152600401610324906112e4565b60405180910390fd5b6004546001600160a01b0316ff5b610351336000356001600160e01b031916610b28565b61037057604051600160e51b62461bcd028152600401610324906112e4565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600a545b90565b6103dd336000356001600160e01b031916610b28565b6103fc57604051600160e51b62461bcd028152600401610324906112e4565b6004546001600160a01b03161561042857604051600160e51b62461bcd02815260040161032490611354565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60095490565b610466336000356001600160e01b031916610b28565b61048557604051600160e51b62461bcd028152600401610324906112e4565b565b600354600160a01b900460ff16156104b457604051600160e51b62461bcd028152600401610324906113a4565b6104bc610987565b60006104ce82600d54600a5403610c09565b905060006104de82600c54610c20565b600e805482019055600d8054840190819055600a5491925011156104fe57fe5b6005546001600160a01b031661056f578034101561053157604051600160e51b62461bcd02815260040161032490611374565b8034111561056a5760405133903483900380156108fc02916000818181858888f19350505050158015610568573d6000803e3d6000fd5b505b6105fa565b600554604051600160e01b6323b872dd0281526001600160a01b03909116906323b872dd906105a690339030908690600401611221565b602060405180830381600087803b1580156105c057600080fd5b505af11580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105f89190810190610e8f565b505b60048054604051600160e01b638f6811a30281526001600160a01b0390911691638f6811a39161062e913391879101611271565b600060405180830381600087803b15801561064857600080fd5b505af115801561065c573d6000803e3d6000fd5b505050507f8442948036198f1146d3a63c3db355d7e0295c2cc5676c755990445da4fdc1c933848360405161069393929190611293565b60405180910390a1505050565b600190565b6106bb336000356001600160e01b031916610b28565b6106da57604051600160e51b62461bcd028152600401610324906112e4565b600080546001600160a01b0319166001600160a01b03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b60048054604051600160e11b635597bd710281526001600160a01b039091169163ab2f7ae29161075d913391600191829101611249565b60206040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107ad9190810190610e8f565b6107cc57604051600160e51b62461bcd028152600401610324906112f4565b600b54156107ef57604051600160e51b62461bcd02815260040161032490611334565b6000851161081257604051600160e51b62461bcd02815260040161032490611384565b6000841161083557604051600160e51b62461bcd02815260040161032490611314565b6101ff84111561085a57604051600160e51b62461bcd02815260040161032490611394565b6000831161087d57604051600160e51b62461bcd02815260040161032490611364565b828210156108a057604051600160e51b62461bcd02815260040161032490611344565b600580546001600160a01b0319166001600160a01b03881617905560068590556108ce600260018601610c59565b60075560088490556009839055600a829055600c8190556108ed610c79565b600b556009546108fd9082610c20565b600f55505050505050565b60065490565b6001546001600160a01b031681565b610933336000356001600160e01b031916610b28565b61095257604051600160e51b62461bcd028152600401610324906112e4565b60038054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b60085490565b6000610991610c79565b600b5490915081811015610a21576109ad600754600e54610c20565b6109c5600754670de0b6b3a764000003600f54610c20565b01600f556000600e819055600d55600b548203600019018015610a0757610a036109fb600754670de0b6b3a76400000383610c8c565b600f54610c20565b600f555b82600b81905550610a1c600f54600954610c59565b600c55505b7f5b873fc01d45058fe77f3883a91020f46d5a7385baac6ceab19748d1d0ae464a8183604051610a529291906113c2565b60405180910390a15050565b6000546001600160a01b031681565b600080610a78610c79565b905080600b541415610a8e575050600c546103c4565b600f54600754600e54610aa19190610c20565b610ab7600754670de0b6b3a76400000383610c20565b600b54910191508203600019018015610aec57610ae9610ae3600754670de0b6b3a76400000383610c8c565b83610c20565b91505b610af882600954610c59565b93505050506103c4565b6000610b0c610c79565b600b5414610b1b576000610b1f565b600d545b600a5403905090565b60006001600160a01b038316301415610b4357506001610c03565b6001546001600160a01b0384811691161415610b6157506001610c03565b6000546001600160a01b0316610b7957506000610c03565b600054604051600160e01b63b70096130281526001600160a01b039091169063b700961390610bb0908690309087906004016112ae565b60206040518083038186803b158015610bc857600080fd5b505afa158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c009190810190610e8f565b90505b92915050565b600081831115610c195781610c00565b5090919050565b6000670de0b6b3a7640000610c4a610c388585610ca3565b6002670de0b6b3a76400005b04610cdd565b81610c5157fe5b049392505050565b600081610c4a610c7185670de0b6b3a7640000610ca3565b600285610c44565b60006006544281610c8657fe5b04905090565b6000633b9aca00610c4a84633b9aca000284610d03565b6000811580610cbe57505080820282828281610cbb57fe5b04145b610c0357604051600160e51b62461bcd02815260040161032490611304565b80820182811015610c0357604051600160e51b62461bcd02815260040161032490611324565b600060028206610d1f576b033b2e3c9fd0803ce8000000610d21565b825b90506002820491505b8115610c0357610d3a8384610d5d565b92506002820615610d5257610d4f8184610d5d565b90505b600282049150610d2a565b60006b033b2e3c9fd0803ce8000000610c4a610d798585610ca3565b60026b033b2e3c9fd0803ce8000000610c44565b8035610c038161144a565b8035610c038161145e565b8051610c038161145e565b8035610c0381611467565b8035610c0381611470565b600060208284031215610dd657600080fd5b6000610de28484610d8d565b949350505050565b60008060008060008060c08789031215610e0357600080fd5b6000610e0f8989610d8d565b9650506020610e2089828a01610db9565b9550506040610e3189828a01610db9565b9450506060610e4289828a01610db9565b9350506080610e5389828a01610db9565b92505060a0610e6489828a01610db9565b9150509295509295509295565b600060208284031215610e8357600080fd5b6000610de28484610d98565b600060208284031215610ea157600080fd5b6000610de28484610da3565b600060208284031215610ebf57600080fd5b6000610de28484610dae565b600060208284031215610edd57600080fd5b6000610de28484610db9565b610ef28161141c565b82525050565b610ef2816113d9565b610ef2816113e9565b610ef2816113f6565b610ef281611427565b610ef281611432565b6000610f326014836113d0565b7f64732d617574682d756e617574686f72697a6564000000000000000000000000815260200192915050565b6000610f6b6015836113d0565b7f636f696e2d6d616368696e652d6e6f742d726f6f740000000000000000000000815260200192915050565b6000610fa46014836113d0565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000815260200192915050565b6000610fdd601d836113d0565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d736d616c6c000000815260200192915050565b60006110166014836113d0565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000815260200192915050565b600061104f6020836113d0565b7f636f696e2d6d616368696e652d616c72656164792d696e697469616c69736564815260200192915050565b6000611088601a836113d0565b7f636f696e2d6d616368696e652d6d61782d746f6f2d736d616c6c000000000000815260200192915050565b60006110c1601b836113d0565b7f657874656e73696f6e2d616c72656164792d696e7374616c6c65640000000000815260200192915050565b60006110fa601d836113d0565b7f636f696e2d6d616368696e652d7461726765742d746f6f2d736d616c6c000000815260200192915050565b6000611133601f836113d0565b7f636f696e2d6d616368696e652d696e73756666696369656e742d66756e647300815260200192915050565b600061116c601d836113d0565b7f636f696e2d6d616368696e652d706572696f642d746f6f2d736d616c6c000000815260200192915050565b60006111a5601d836113d0565b7f636f696e2d6d616368696e652d77696e646f772d746f6f2d6c61726765000000815260200192915050565b60006111de601b836113d0565b7f636f6c6f6e792d657874656e73696f6e2d646570726563617465640000000000815260200192915050565b610ef2816103c4565b60208101610c038284610ef8565b6060810161122f8286610ee9565b61123c6020830185610ef8565b610de2604083018461120a565b606081016112578286610ee9565b6112646020830185610f1c565b610de26040830184610f13565b6040810161127f8285610ee9565b61128c602083018461120a565b9392505050565b606081016112a18286610ee9565b61123c602083018561120a565b606081016112bc8286610ef8565b6112c96020830185610ef8565b610de26040830184610f01565b60208101610c038284610f0a565b60208082528101610c0381610f25565b60208082528101610c0381610f5e565b60208082528101610c0381610f97565b60208082528101610c0381610fd0565b60208082528101610c0381611009565b60208082528101610c0381611042565b60208082528101610c038161107b565b60208082528101610c03816110b4565b60208082528101610c03816110ed565b60208082528101610c0381611126565b60208082528101610c038161115f565b60208082528101610c0381611198565b60208082528101610c03816111d1565b60208101610c03828461120a565b6040810161127f828561120a565b90815260200190565b6000610c0382611410565b151590565b6001600160e01b03191690565b6000610c03826113d9565b8061140b8161143d565b919050565b6001600160a01b031690565b6000610c03826113f6565b6000610c0382611401565b6000610c03826103c4565b6008811061144757fe5b50565b611453816113d9565b811461144757600080fd5b611453816113e4565b611453816113f6565b611453816103c456fea265627a7a72305820401b91cdbba211cdf1da2458bd07d809aedbf16af7434b9bbf1dc4be11ac19186c6578706572696d656e74616cf50037";
