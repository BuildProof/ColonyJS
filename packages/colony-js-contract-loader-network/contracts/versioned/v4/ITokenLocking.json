{
  "contractName": "ITokenLocking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "colonyNetwork",
          "type": "address"
        }
      ],
      "name": "ColonyNetworkSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "lockCount",
          "type": "uint256"
        }
      ],
      "name": "TokenLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "lockId",
          "type": "uint256"
        }
      ],
      "name": "UserTokenUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "UserTokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserTokenWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "miner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokensLost",
          "type": "uint256"
        }
      ],
      "name": "ReputationMinerPenalised",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_colonyNetwork",
          "type": "address"
        }
      ],
      "name": "setColonyNetwork",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getColonyNetwork",
      "outputs": [
        {
          "name": "networkAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "lockToken",
      "outputs": [
        {
          "name": "lockCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_lockId",
          "type": "uint256"
        }
      ],
      "name": "unlockTokenForUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_lockId",
          "type": "uint256"
        }
      ],
      "name": "incrementLockCounterTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakers",
          "type": "address[]"
        },
        {
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "punishStakers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTotalLockCount",
      "outputs": [
        {
          "name": "lockCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserLock",
      "outputs": [
        {
          "components": [
            {
              "name": "lockCount",
              "type": "uint256"
            },
            {
              "name": "balance",
              "type": "uint256"
            },
            {
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "lock",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_colonyNetwork\",\"type\":\"address\"}],\"name\":\"setColonyNetwork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"lockToken\",\"outputs\":[{\"name\":\"lockCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakers\",\"type\":\"address[]\"},{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"punishStakers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalLockCount\",\"outputs\":[{\"name\":\"lockCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLock\",\"outputs\":[{\"components\":[{\"name\":\"lockCount\",\"type\":\"uint256\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"lock\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColonyNetwork\",\"outputs\":[{\"name\":\"networkAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_lockId\",\"type\":\"uint256\"}],\"name\":\"unlockTokenForUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_lockId\",\"type\":\"uint256\"}],\"name\":\"incrementLockCounterTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"colonyNetwork\",\"type\":\"address\"}],\"name\":\"ColonyNetworkSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lockCount\",\"type\":\"uint256\"}],\"name\":\"TokenLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lockId\",\"type\":\"uint256\"}],\"name\":\"UserTokenUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"UserTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UserTokenWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensLost\",\"type\":\"uint256\"}],\"name\":\"ReputationMinerPenalised\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"_amount\":\"Amount to deposit\",\"_token\":\"Address of the token to deposit\"}},\"getColonyNetwork()\":{\"return\":\"networkAddress ColonyNetwork address\"},\"getTotalLockCount(address)\":{\"params\":{\"_token\":\"Address of the token\"},\"return\":\"lockCount Global token lock count\"},\"getUserLock(address,address)\":{\"params\":{\"_token\":\"Address of the token\",\"_user\":\"Address of the user\"},\"return\":\"lock Lock object containing:   `lockCount` User's token lock count,   `amount` User's deposited amount,   `timestamp` Timestamp of deposit.\"},\"incrementLockCounterTo(address,uint256)\":{\"params\":{\"_lockId\":\"Id of the lock user wants to increment to\",\"_token\":\"Address of the token we want to increment lock count for\"}},\"lockToken(address)\":{\"params\":{\"_token\":\"Address of the token we want to lock\"},\"return\":\"lockCount Updated total token lock count\"},\"punishStakers(address[],address,uint256)\":{\"details\":\"While public, it can only be called successfully by the current ReputationMiningCycle.\",\"params\":{\"_amount\":\"Amount of stake to slash\",\"_beneficiary\":\"Address of beneficiary to receive forfeited stake\",\"_stakers\":\"Array of the addresses of stakers to punish\"}},\"setColonyNetwork(address)\":{\"details\":\"ColonyNetwork is used for checking if sender is a colony created on colony network.\",\"params\":{\"_colonyNetwork\":\"Address of the ColonyNetwork\"}},\"unlockTokenForUser(address,address,uint256)\":{\"params\":{\"_lockId\":\"Id of the lock we want to increment to\",\"_token\":\"Address of the token we want to unlock\",\"_user\":\"Address of the user\"}},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\"Amount to withdraw\",\"_token\":\"Address of the token to withdraw from\"}}}},\"userdoc\":{\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Deposit `_amount` of colony tokens. Can only be called if user tokens are not locked. Before calling this function user has to allow that their tokens can be transferred by token locking contract.\"},\"getColonyNetwork()\":{\"notice\":\"Get ColonyNetwork address.\"},\"getTotalLockCount(address)\":{\"notice\":\"Get global lock count for a specific token.\"},\"getUserLock(address,address)\":{\"notice\":\"Get user token lock info (lock count and deposited amount).\"},\"incrementLockCounterTo(address,uint256)\":{\"notice\":\"Increments sender's lock count to `_lockId`.\"},\"lockToken(address)\":{\"notice\":\"Locks everyones' tokens on `_token` address.\"},\"punishStakers(address[],address,uint256)\":{\"notice\":\"Function called to punish people who staked against a new reputation root hash that turned out to be incorrect.\"},\"setColonyNetwork(address)\":{\"notice\":\"Set the ColonyNetwork contract address.\"},\"unlockTokenForUser(address,address,uint256)\":{\"notice\":\"Increments the lock counter to `_lockId` for the `_user` if user's lock count is less than `_lockId` by 1. Can only be called by a colony.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw `_amount` of deposited tokens. Can only be called if user tokens are not locked.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/kronosapiens/code/colony/colonyNetwork/contracts/ITokenLocking.sol\":\"ITokenLocking\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kronosapiens/code/colony/colonyNetwork/contracts/ITokenLocking.sol\":{\"keccak256\":\"0x8d141cfad7573d34c28a3adc2191f37c7fbea5aaa92d7a647c653ffdad4e1774\",\"urls\":[\"bzzr://0a9f1720abc64270e407ec98f6b25ebda7eea6cc945c8898ce5cceb42ea17a37\"]},\"/Users/kronosapiens/code/colony/colonyNetwork/contracts/TokenLockingDataTypes.sol\":{\"keccak256\":\"0xfa47269f8c746dd682a259c8ad93174285bbd3b65a48a99706b23688e190c862\",\"urls\":[\"bzzr://1e080a26362029119cc5cb0b0c32a9d74709abf2b50404197a3230d5853e96d7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n  This file is part of The Colony Network.\n\n  The Colony Network is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  The Colony Network is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with The Colony Network. If not, see <http://www.gnu.org/licenses/>.\n*/\n\npragma solidity >=0.5.8; // ignore-swc-103\npragma experimental \"ABIEncoderV2\";\n\nimport \"./TokenLockingDataTypes.sol\";\n\n\ncontract ITokenLocking is TokenLockingDataTypes {\n\n  /// @notice Set the ColonyNetwork contract address.\n  /// @dev ColonyNetwork is used for checking if sender is a colony created on colony network.\n  /// @param _colonyNetwork Address of the ColonyNetwork\n  function setColonyNetwork(address _colonyNetwork) public;\n\n  /// @notice Get ColonyNetwork address.\n  /// @return networkAddress ColonyNetwork address\n  function getColonyNetwork() public view returns (address networkAddress);\n\n  /// @notice Locks everyones' tokens on `_token` address.\n  /// @param _token Address of the token we want to lock\n  /// @return lockCount Updated total token lock count\n  function lockToken(address _token) public returns (uint256 lockCount);\n\n  /// @notice Increments the lock counter to `_lockId` for the `_user` if user's lock count is less than `_lockId` by 1.\n  /// Can only be called by a colony.\n  /// @param _token Address of the token we want to unlock\n  /// @param _user Address of the user\n  /// @param _lockId Id of the lock we want to increment to\n  function unlockTokenForUser(address _token, address _user, uint256 _lockId) public;\n\n  /// @notice Increments sender's lock count to `_lockId`.\n  /// @param _token Address of the token we want to increment lock count for\n  /// @param _lockId Id of the lock user wants to increment to\n  function incrementLockCounterTo(address _token, uint256 _lockId) public;\n\n  /// @notice Deposit `_amount` of colony tokens. Can only be called if user tokens are not locked.\n  /// Before calling this function user has to allow that their tokens can be transferred by token locking contract.\n  /// @param _token Address of the token to deposit\n  /// @param _amount Amount to deposit\n  function deposit(address _token, uint256 _amount) public;\n\n  /// @notice Withdraw `_amount` of deposited tokens. Can only be called if user tokens are not locked.\n  /// @param _token Address of the token to withdraw from\n  /// @param _amount Amount to withdraw\n  function withdraw(address _token, uint256 _amount) public;\n\n  /// @notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect.\n  /// @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n  /// @param _stakers Array of the addresses of stakers to punish\n  /// @param _beneficiary Address of beneficiary to receive forfeited stake\n  /// @param _amount Amount of stake to slash\n  function punishStakers(address[] memory _stakers, address _beneficiary, uint256 _amount) public;\n\n  /// @notice Get global lock count for a specific token.\n  /// @param _token Address of the token\n  /// @return lockCount Global token lock count\n  function getTotalLockCount(address _token) public view returns (uint256 lockCount);\n\n  /// @notice Get user token lock info (lock count and deposited amount).\n  /// @param _token Address of the token\n  /// @param _user Address of the user\n  /// @return lock Lock object containing:\n  ///   `lockCount` User's token lock count,\n  ///   `amount` User's deposited amount,\n  ///   `timestamp` Timestamp of deposit.\n  function getUserLock(address _token, address _user) public view returns (Lock memory lock);\n}\n",
  "sourcePath": "/Users/kronosapiens/code/colony/colonyNetwork/contracts/ITokenLocking.sol",
  "ast": {
    "absolutePath": "/Users/kronosapiens/code/colony/colonyNetwork/contracts/ITokenLocking.sol",
    "exportedSymbols": {
      "ITokenLocking": [
        13787
      ]
    },
    "id": 13788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13709,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:28"
      },
      {
        "id": 13710,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "743:35:28"
      },
      {
        "absolutePath": "/Users/kronosapiens/code/colony/colonyNetwork/contracts/TokenLockingDataTypes.sol",
        "file": "./TokenLockingDataTypes.sol",
        "id": 13711,
        "nodeType": "ImportDirective",
        "scope": 13788,
        "sourceUnit": 21047,
        "src": "780:37:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13712,
              "name": "TokenLockingDataTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21046,
              "src": "846:21:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenLockingDataTypes_$21046",
                "typeString": "contract TokenLockingDataTypes"
              }
            },
            "id": 13713,
            "nodeType": "InheritanceSpecifier",
            "src": "846:21:28"
          }
        ],
        "contractDependencies": [
          21046
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 13787,
        "linearizedBaseContracts": [
          13787,
          21046
        ],
        "name": "ITokenLocking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Set the ColonyNetwork contract address.\n @dev ColonyNetwork is used for checking if sender is a colony created on colony network.\n @param _colonyNetwork Address of the ColonyNetwork",
            "id": 13718,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setColonyNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13715,
                  "name": "_colonyNetwork",
                  "nodeType": "VariableDeclaration",
                  "scope": 13718,
                  "src": "1105:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:24:28"
            },
            "returnParameters": {
              "id": 13717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:28"
            },
            "scope": 13787,
            "src": "1079:57:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get ColonyNetwork address.\n @return networkAddress ColonyNetwork address",
            "id": 13723,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getColonyNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:2:28"
            },
            "returnParameters": {
              "id": 13722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13721,
                  "name": "networkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13723,
                  "src": "1281:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:24:28"
            },
            "scope": 13787,
            "src": "1232:73:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Locks everyones' tokens on `_token` address.\n @param _token Address of the token we want to lock\n @return lockCount Updated total token lock count",
            "id": 13730,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13725,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13730,
                  "src": "1499:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1498:16:28"
            },
            "returnParameters": {
              "id": 13729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13728,
                  "name": "lockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13730,
                  "src": "1531:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:19:28"
            },
            "scope": 13787,
            "src": "1480:70:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Increments the lock counter to `_lockId` for the `_user` if user's lock count is less than `_lockId` by 1.\n Can only be called by a colony.\n @param _token Address of the token we want to unlock\n @param _user Address of the user\n @param _lockId Id of the lock we want to increment to",
            "id": 13739,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokenForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13732,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1899:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13734,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1915:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13736,
                  "name": "_lockId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1930:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:48:28"
            },
            "returnParameters": {
              "id": 13738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:28"
            },
            "scope": 13787,
            "src": "1871:83:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Increments sender's lock count to `_lockId`.\n @param _token Address of the token we want to increment lock count for\n @param _lockId Id of the lock user wants to increment to",
            "id": 13746,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "incrementLockCounterTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13741,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13746,
                  "src": "2189:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13743,
                  "name": "_lockId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13746,
                  "src": "2205:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2188:33:28"
            },
            "returnParameters": {
              "id": 13745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:0:28"
            },
            "scope": 13787,
            "src": "2157:72:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Deposit `_amount` of colony tokens. Can only be called if user tokens are not locked.\n Before calling this function user has to allow that their tokens can be transferred by token locking contract.\n @param _token Address of the token to deposit\n @param _amount Amount to deposit",
            "id": 13753,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13748,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13753,
                  "src": "2558:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13750,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13753,
                  "src": "2574:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2557:33:28"
            },
            "returnParameters": {
              "id": 13752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:28"
            },
            "scope": 13787,
            "src": "2541:57:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Withdraw `_amount` of deposited tokens. Can only be called if user tokens are not locked.\n @param _token Address of the token to withdraw from\n @param _amount Amount to withdraw",
            "id": 13760,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13755,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13760,
                  "src": "2822:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13757,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13760,
                  "src": "2838:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2821:33:28"
            },
            "returnParameters": {
              "id": 13759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2861:0:28"
            },
            "scope": 13787,
            "src": "2804:58:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect.\n @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n @param _stakers Array of the addresses of stakers to punish\n @param _beneficiary Address of beneficiary to receive forfeited stake\n @param _amount Amount of stake to slash",
            "id": 13770,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "punishStakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13763,
                  "name": "_stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3301:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13761,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3301:7:28",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13762,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3301:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13765,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3328:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13767,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3350:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3300:66:28"
            },
            "returnParameters": {
              "id": 13769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3373:0:28"
            },
            "scope": 13787,
            "src": "3278:96:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get global lock count for a specific token.\n @param _token Address of the token\n @return lockCount Global token lock count",
            "id": 13777,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalLockCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13772,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13777,
                  "src": "3552:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3551:16:28"
            },
            "returnParameters": {
              "id": 13776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13775,
                  "name": "lockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13777,
                  "src": "3589:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3588:19:28"
            },
            "scope": 13787,
            "src": "3525:83:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get user token lock info (lock count and deposited amount).\n @param _token Address of the token\n @param _user Address of the user\n @return lock Lock object containing:\n   `lockCount` User's token lock count,\n   `amount` User's deposited amount,\n   `timestamp` Timestamp of deposit.",
            "id": 13786,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13779,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "3959:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13781,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "3975:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3958:31:28"
            },
            "returnParameters": {
              "id": 13785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13784,
                  "name": "lock",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "4011:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lock_$21045_memory_ptr",
                    "typeString": "struct TokenLockingDataTypes.Lock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13783,
                    "name": "Lock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21045,
                    "src": "4011:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lock_$21045_storage_ptr",
                      "typeString": "struct TokenLockingDataTypes.Lock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4010:18:28"
            },
            "scope": 13787,
            "src": "3938:91:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13788,
        "src": "820:3211:28"
      }
    ],
    "src": "700:3332:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/kronosapiens/code/colony/colonyNetwork/contracts/ITokenLocking.sol",
    "exportedSymbols": {
      "ITokenLocking": [
        13787
      ]
    },
    "id": 13788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13709,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:28"
      },
      {
        "id": 13710,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "743:35:28"
      },
      {
        "absolutePath": "/Users/kronosapiens/code/colony/colonyNetwork/contracts/TokenLockingDataTypes.sol",
        "file": "./TokenLockingDataTypes.sol",
        "id": 13711,
        "nodeType": "ImportDirective",
        "scope": 13788,
        "sourceUnit": 21047,
        "src": "780:37:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13712,
              "name": "TokenLockingDataTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21046,
              "src": "846:21:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenLockingDataTypes_$21046",
                "typeString": "contract TokenLockingDataTypes"
              }
            },
            "id": 13713,
            "nodeType": "InheritanceSpecifier",
            "src": "846:21:28"
          }
        ],
        "contractDependencies": [
          21046
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 13787,
        "linearizedBaseContracts": [
          13787,
          21046
        ],
        "name": "ITokenLocking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Set the ColonyNetwork contract address.\n @dev ColonyNetwork is used for checking if sender is a colony created on colony network.\n @param _colonyNetwork Address of the ColonyNetwork",
            "id": 13718,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setColonyNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13715,
                  "name": "_colonyNetwork",
                  "nodeType": "VariableDeclaration",
                  "scope": 13718,
                  "src": "1105:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:24:28"
            },
            "returnParameters": {
              "id": 13717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:28"
            },
            "scope": 13787,
            "src": "1079:57:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get ColonyNetwork address.\n @return networkAddress ColonyNetwork address",
            "id": 13723,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getColonyNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:2:28"
            },
            "returnParameters": {
              "id": 13722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13721,
                  "name": "networkAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13723,
                  "src": "1281:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1280:24:28"
            },
            "scope": 13787,
            "src": "1232:73:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Locks everyones' tokens on `_token` address.\n @param _token Address of the token we want to lock\n @return lockCount Updated total token lock count",
            "id": 13730,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13725,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13730,
                  "src": "1499:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1498:16:28"
            },
            "returnParameters": {
              "id": 13729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13728,
                  "name": "lockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13730,
                  "src": "1531:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1530:19:28"
            },
            "scope": 13787,
            "src": "1480:70:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Increments the lock counter to `_lockId` for the `_user` if user's lock count is less than `_lockId` by 1.\n Can only be called by a colony.\n @param _token Address of the token we want to unlock\n @param _user Address of the user\n @param _lockId Id of the lock we want to increment to",
            "id": 13739,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockTokenForUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13732,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1899:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13734,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1915:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1915:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13736,
                  "name": "_lockId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "1930:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1898:48:28"
            },
            "returnParameters": {
              "id": 13738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:28"
            },
            "scope": 13787,
            "src": "1871:83:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Increments sender's lock count to `_lockId`.\n @param _token Address of the token we want to increment lock count for\n @param _lockId Id of the lock user wants to increment to",
            "id": 13746,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "incrementLockCounterTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13741,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13746,
                  "src": "2189:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13743,
                  "name": "_lockId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13746,
                  "src": "2205:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2188:33:28"
            },
            "returnParameters": {
              "id": 13745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2228:0:28"
            },
            "scope": 13787,
            "src": "2157:72:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Deposit `_amount` of colony tokens. Can only be called if user tokens are not locked.\n Before calling this function user has to allow that their tokens can be transferred by token locking contract.\n @param _token Address of the token to deposit\n @param _amount Amount to deposit",
            "id": 13753,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13748,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13753,
                  "src": "2558:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13750,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13753,
                  "src": "2574:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2557:33:28"
            },
            "returnParameters": {
              "id": 13752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:0:28"
            },
            "scope": 13787,
            "src": "2541:57:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Withdraw `_amount` of deposited tokens. Can only be called if user tokens are not locked.\n @param _token Address of the token to withdraw from\n @param _amount Amount to withdraw",
            "id": 13760,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13755,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13760,
                  "src": "2822:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13757,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13760,
                  "src": "2838:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2821:33:28"
            },
            "returnParameters": {
              "id": 13759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2861:0:28"
            },
            "scope": 13787,
            "src": "2804:58:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Function called to punish people who staked against a new reputation root hash that turned out to be incorrect.\n @dev While public, it can only be called successfully by the current ReputationMiningCycle.\n @param _stakers Array of the addresses of stakers to punish\n @param _beneficiary Address of beneficiary to receive forfeited stake\n @param _amount Amount of stake to slash",
            "id": 13770,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "punishStakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13763,
                  "name": "_stakers",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3301:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13761,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3301:7:28",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 13762,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3301:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13765,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3328:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13767,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13770,
                  "src": "3350:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3300:66:28"
            },
            "returnParameters": {
              "id": 13769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3373:0:28"
            },
            "scope": 13787,
            "src": "3278:96:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get global lock count for a specific token.\n @param _token Address of the token\n @return lockCount Global token lock count",
            "id": 13777,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalLockCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13772,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13777,
                  "src": "3552:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3551:16:28"
            },
            "returnParameters": {
              "id": 13776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13775,
                  "name": "lockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13777,
                  "src": "3589:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3588:19:28"
            },
            "scope": 13787,
            "src": "3525:83:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Get user token lock info (lock count and deposited amount).\n @param _token Address of the token\n @param _user Address of the user\n @return lock Lock object containing:\n   `lockCount` User's token lock count,\n   `amount` User's deposited amount,\n   `timestamp` Timestamp of deposit.",
            "id": 13786,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13779,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "3959:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13781,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "3975:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3975:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3958:31:28"
            },
            "returnParameters": {
              "id": 13785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13784,
                  "name": "lock",
                  "nodeType": "VariableDeclaration",
                  "scope": 13786,
                  "src": "4011:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lock_$21045_memory_ptr",
                    "typeString": "struct TokenLockingDataTypes.Lock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13783,
                    "name": "Lock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21045,
                    "src": "4011:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lock_$21045_storage_ptr",
                      "typeString": "struct TokenLockingDataTypes.Lock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4010:18:28"
            },
            "scope": 13787,
            "src": "3938:91:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13788,
        "src": "820:3211:28"
      }
    ],
    "src": "700:3332:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-01T16:17:37.669Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "deposit(address,uint256)": {
        "params": {
          "_amount": "Amount to deposit",
          "_token": "Address of the token to deposit"
        }
      },
      "getColonyNetwork()": {
        "return": "networkAddress ColonyNetwork address"
      },
      "getTotalLockCount(address)": {
        "params": {
          "_token": "Address of the token"
        },
        "return": "lockCount Global token lock count"
      },
      "getUserLock(address,address)": {
        "params": {
          "_token": "Address of the token",
          "_user": "Address of the user"
        },
        "return": "lock Lock object containing:   `lockCount` User's token lock count,   `amount` User's deposited amount,   `timestamp` Timestamp of deposit."
      },
      "incrementLockCounterTo(address,uint256)": {
        "params": {
          "_lockId": "Id of the lock user wants to increment to",
          "_token": "Address of the token we want to increment lock count for"
        }
      },
      "lockToken(address)": {
        "params": {
          "_token": "Address of the token we want to lock"
        },
        "return": "lockCount Updated total token lock count"
      },
      "punishStakers(address[],address,uint256)": {
        "details": "While public, it can only be called successfully by the current ReputationMiningCycle.",
        "params": {
          "_amount": "Amount of stake to slash",
          "_beneficiary": "Address of beneficiary to receive forfeited stake",
          "_stakers": "Array of the addresses of stakers to punish"
        }
      },
      "setColonyNetwork(address)": {
        "details": "ColonyNetwork is used for checking if sender is a colony created on colony network.",
        "params": {
          "_colonyNetwork": "Address of the ColonyNetwork"
        }
      },
      "unlockTokenForUser(address,address,uint256)": {
        "params": {
          "_lockId": "Id of the lock we want to increment to",
          "_token": "Address of the token we want to unlock",
          "_user": "Address of the user"
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "_amount": "Amount to withdraw",
          "_token": "Address of the token to withdraw from"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "deposit(address,uint256)": {
        "notice": "Deposit `_amount` of colony tokens. Can only be called if user tokens are not locked. Before calling this function user has to allow that their tokens can be transferred by token locking contract."
      },
      "getColonyNetwork()": {
        "notice": "Get ColonyNetwork address."
      },
      "getTotalLockCount(address)": {
        "notice": "Get global lock count for a specific token."
      },
      "getUserLock(address,address)": {
        "notice": "Get user token lock info (lock count and deposited amount)."
      },
      "incrementLockCounterTo(address,uint256)": {
        "notice": "Increments sender's lock count to `_lockId`."
      },
      "lockToken(address)": {
        "notice": "Locks everyones' tokens on `_token` address."
      },
      "punishStakers(address[],address,uint256)": {
        "notice": "Function called to punish people who staked against a new reputation root hash that turned out to be incorrect."
      },
      "setColonyNetwork(address)": {
        "notice": "Set the ColonyNetwork contract address."
      },
      "unlockTokenForUser(address,address,uint256)": {
        "notice": "Increments the lock counter to `_lockId` for the `_user` if user's lock count is less than `_lockId` by 1. Can only be called by a colony."
      },
      "withdraw(address,uint256)": {
        "notice": "Withdraw `_amount` of deposited tokens. Can only be called if user tokens are not locked."
      }
    }
  }
}